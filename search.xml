<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Jsp期中考试</title>
      <link href="/posts/ec7b206f/"/>
      <url>/posts/ec7b206f/</url>
      
        <content type="html"><![CDATA[<h1 id="如何新建项目"><a href="#如何新建项目" class="headerlink" title="如何新建项目"></a>如何新建项目</h1><ul><li>选择 File—-New—-Dynamic Web Project<ul><li>输入项目名，什么名都行</li></ul></li><li>若新建jsp文件<ul><li>直接在你的项目名上右击，选择 New—-JSP File 即可<ul><li> <strong>建完文件后一定要将页面中的ISO-….乱起八糟的这一串，利用ctrl+F全部替换为utf-8</strong> </li></ul></li></ul></li><li>若新建java文件<ul><li>在你的项目名上双击，找到src/main/java，在java文件上右击，选择New—-Class</li><li>看好题目要求是否需要建包(package)，若需要先建包再建Java文件</li></ul></li></ul><h1 id="如何配置服务器"><a href="#如何配置服务器" class="headerlink" title="如何配置服务器"></a>如何配置服务器</h1><ul><li>在编写好文件后，在空白处右击，找到run as下的run on server</li><li>在弹出的提示框中，选择tomcat7还是8,忘记那个能用了</li><li>然后选择tomcat这个东西的路径，一般就是在E盘一个叫jsp安装软件下就能找到，选择好目录后一路确定就OK</li></ul><h4 id="所有需要自己写的东西都用一长串-引起来了"><a href="#所有需要自己写的东西都用一长串-引起来了" class="headerlink" title="所有需要自己写的东西都用一长串*引起来了"></a>所有需要自己写的东西都用一长串*引起来了</h4><h1 id="第一题—页面计数器"><a href="#第一题—页面计数器" class="headerlink" title="第一题—页面计数器"></a>第一题—页面计数器</h1><p>第一题太简单直接上源码</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span> contentType=<span class="string">&quot;text/html; charset=UTF-8&quot;</span></span><br><span class="line">    pageEncoding=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- ************************************** --&gt;</span><br><span class="line">&lt;%</span><br><span class="line">Integer counts = (Integer)application.getAttribute(<span class="string">&quot;AccessCount&quot;</span>);</span><br><span class="line"><span class="comment">// counts == null 一定要写在前面，若写成(counts == 0 || counts ==null) 就会报错</span></span><br><span class="line"><span class="keyword">if</span>(counts == <span class="keyword">null</span> || counts == <span class="number">0</span>) &#123;</span><br><span class="line">counts=<span class="number">1</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">counts+=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">application.setAttribute(<span class="string">&quot;AccessCount&quot;</span>, counts);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;span&gt;您第&lt;%=counts%&gt;次访问该页面&lt;/span&gt;</span><br><span class="line">    &lt;!-- ************************************** --&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h1 id="第二题—-获取当前时间？"><a href="#第二题—-获取当前时间？" class="headerlink" title="第二题—-获取当前时间？"></a>第二题—-获取当前时间？</h1><p>没有源码没办法写了。</p><h1 id="第三题—-Request内置对象的使用"><a href="#第三题—-Request内置对象的使用" class="headerlink" title="第三题—-Request内置对象的使用"></a>第三题—-Request内置对象的使用</h1><ul><li>login.jsp页面</li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span> contentType=<span class="string">&quot;text/html; charset=UTF-8&quot;</span></span><br><span class="line">    pageEncoding=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- ************************************** --&gt;</span><br><span class="line">    &lt;!-- action里面的内容一定要与编写的第二个页面名一致 --&gt;</span><br><span class="line">&lt;form action=<span class="string">&quot;deal.jsp&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">        &lt;!-- 两个输入文本框中一定要有name属性 --&gt;</span><br><span class="line">用户名：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;user&quot;</span>&gt;&lt;br&gt;</span><br><span class="line">密码：&lt;input type=<span class="string">&quot;password&quot;</span> name=<span class="string">&quot;pwd&quot;</span>&gt;&lt;br&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;reset&quot;</span> value=<span class="string">&quot;重置&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">    &lt;!-- ************************************** --&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ul><li>deal.jsp页面</li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span> contentType=<span class="string">&quot;text/html; charset=UTF-8&quot;</span></span><br><span class="line">    pageEncoding=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- ************************************** --&gt;</span><br><span class="line">    &lt;!-- getParameter里面的两个参数是login.jsp中input标签里的name属性，一定要一致，要不然出不来结果 --&gt;</span><br><span class="line">&lt;%</span><br><span class="line">String name = request.getParameter(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">String password = request.getParameter(<span class="string">&quot;pwd&quot;</span>);</span><br><span class="line">%&gt;</span><br><span class="line">    &lt;!-- 以下是最终在网页上现实的结果，最好与给出的效果图一致，以免不得分，都写出来了还不得分那得多亏 --&gt;</span><br><span class="line">用户名为：&lt;%=name %&gt;&lt;br&gt;</span><br><span class="line">密码为：&lt;%=password %&gt;&lt;br&gt;</span><br><span class="line">    &lt;!-- ************************************** --&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h1 id="第四题—-重定向和转发的区别"><a href="#第四题—-重定向和转发的区别" class="headerlink" title="第四题—-重定向和转发的区别"></a>第四题—-重定向和转发的区别</h1><p>没有源码没办法写了。</p><h1 id="第五题—-JavaBean的使用"><a href="#第五题—-JavaBean的使用" class="headerlink" title="第五题—-JavaBean的使用"></a>第五题—-JavaBean的使用</h1><p>没有源码没办法写了。</p>]]></content>
      
      
      <categories>
          
          <category> 期末复习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Js小游戏</title>
      <link href="/posts/7d5340c/"/>
      <url>/posts/7d5340c/</url>
      
        <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>答辩来的如此突然差点慌了手脚</p><blockquote><div style="color:red">请务必认真看完这两段文字！</div></blockquote><ul><li>最后的完整代码部分，可以直接粘贴，但为了避免重复，请利用ctrl+f功能（查找替换）自行替换掉一些函数名或者是关键字</li><li>可选功能，可以加入也可以不加入。</li><li>电脑端查看本文章效果会更好一些，因为代码篇幅太长，手机端挤在一块显得很乱</li></ul><hr><h1 id="1、设计大纲"><a href="#1、设计大纲" class="headerlink" title="1、设计大纲"></a>1、设计大纲</h1><h2 id="1-1-项目结构"><a href="#1-1-项目结构" class="headerlink" title="1.1 项目结构"></a>1.1 项目结构</h2><blockquote><p> <strong>说明：</strong> </p></blockquote><ul><li>新建一个文件夹，并在该文件夹下建立images文件夹以及index.html images文件夹存放图片资源</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- 根目录</span><br><span class="line">- images</span><br><span class="line">- bg.png</span><br><span class="line">- club.jpg</span><br><span class="line">- index.html</span><br></pre></td></tr></table></figure><h2 id="1-2-完整代码"><a href="#1-2-完整代码" class="headerlink" title="1.2 完整代码"></a>1.2 完整代码</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>pokes game<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">            <span class="comment">/* #timer &#123;</span></span></span><br><span class="line"><span class="comment"><span class="css">            color: purple;</span></span></span><br><span class="line"><span class="comment"><span class="css">            font-size: 18px;</span></span></span><br><span class="line"><span class="comment"><span class="css">            &#125; */</span></span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">            <span class="comment">/* 设置表格的边框样式 */</span></span></span><br><span class="line"><span class="css">            <span class="selector-tag">table</span>, <span class="selector-tag">tr</span>, <span class="selector-tag">td</span> &#123;</span></span><br><span class="line"><span class="css">                <span class="comment">/* 将边框设为 1像素大小的蓝色实线 */</span></span></span><br><span class="line"><span class="css">                <span class="attribute">border</span>: <span class="number">1px</span> solid blue;</span></span><br><span class="line"><span class="css">                <span class="comment">/* 将相邻的单元格的边框合为一个 */</span></span></span><br><span class="line"><span class="css">                <span class="attribute">border-collapse</span>: collapse;</span></span><br><span class="line"><span class="css">            &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">            <span class="selector-tag">td</span> &#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">width</span>: <span class="number">157px</span>;</span></span><br><span class="line"><span class="css">                <span class="attribute">height</span>: <span class="number">221px</span>;</span></span><br><span class="line"><span class="css">                <span class="attribute">background</span>: transparent <span class="built_in">url</span>(<span class="string">images/club.jpg</span>) no-repeat scroll -<span class="number">957px</span> -<span class="number">670px</span>;</span></span><br><span class="line"><span class="css">            &#125;</span></span><br><span class="line"><span class="css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 四张扑克在图片上的位置</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> pokes = [</span></span><br><span class="line"><span class="javascript">                [-<span class="number">314</span>, -<span class="number">670</span>],</span></span><br><span class="line"><span class="javascript">                [-<span class="number">471</span>, -<span class="number">670</span>],</span></span><br><span class="line"><span class="javascript">                [-<span class="number">632</span>, -<span class="number">670</span>],</span></span><br><span class="line"><span class="javascript">                [-<span class="number">795</span>, -<span class="number">670</span>]</span></span><br><span class="line"><span class="javascript">            ]</span></span><br><span class="line"><span class="javascript">            <span class="comment">// cover表示正反面，1正面 0反面</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> cover = <span class="number">1</span>; </span></span><br><span class="line"><span class="javascript">            <span class="comment">// clickCount 表示点击td的次数，初始为0表示还未点击</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> clickCount = <span class="number">0</span>; </span></span><br><span class="line"><span class="javascript">            <span class="comment">// 指定配对的牌的数目 </span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> matchCount = <span class="number">2</span>; </span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> waitMatch = <span class="keyword">new</span> <span class="built_in">Array</span>(); <span class="comment">// 保存等配对的牌队列</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> td_back = <span class="string">&quot;transparent url(images/bg.png) no-repeat scroll&quot;</span>;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 动态生成表格</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span> <span class="title">createTable</span>(<span class="params">rows, cols</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> table = <span class="built_in">document</span>.createElement(<span class="string">&#x27;table&#x27;</span>); </span></span><br><span class="line"><span class="javascript">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; rows; i++) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> tr = <span class="built_in">document</span>.createElement(<span class="string">&#x27;tr&#x27;</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; cols; j++) &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">var</span> td = <span class="built_in">document</span>.createElement(<span class="string">&#x27;td&#x27;</span>);</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">var</span> idVal = i + <span class="string">&quot;&quot;</span> + j;</span></span><br><span class="line"><span class="javascript">                        td.setAttribute(<span class="string">&quot;id&quot;</span>, idVal);</span></span><br><span class="line"><span class="javascript">                        tr.appendChild(td);</span></span><br><span class="line"><span class="javascript">                    &#125;</span></span><br><span class="line"><span class="javascript">                    table.appendChild(tr);</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">document</span>.body.appendChild(table);</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 利用随机数发牌</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 先产生一个随机数组</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span> <span class="title">getRandom</span>(<span class="params">num</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> arr = [];</span></span><br><span class="line"><span class="javascript">                <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i &lt; num;) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> rand = <span class="built_in">Math</span>.random() * num;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> tempVal = <span class="built_in">parseInt</span>(rand);</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> flag = <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; arr.length; j++) &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">if</span>(tempVal == arr[j]) &#123;</span></span><br><span class="line"><span class="javascript">                            flag = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">                        &#125;</span></span><br><span class="line"><span class="javascript">                    &#125;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span> (!flag) &#123;</span></span><br><span class="line"><span class="javascript">                        arr[i++] = tempVal;</span></span><br><span class="line"><span class="javascript">                    &#125;</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> arr;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 再调用生成的随机数组，实现发牌</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span> <span class="title">fapai</span>(<span class="params">count</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> fapaiArr = pokes.concat(pokes);</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> randArr = getRandom(fapaiArr.length);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> table = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;table&#x27;</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> tds = table.getElementsByTagName(<span class="string">&#x27;td&#x27;</span>);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> css_text = <span class="string">&quot;width: 157px;&quot;</span>;</span></span><br><span class="line"><span class="javascript">                css_text += <span class="string">&quot;height: 221px;&quot;</span>;</span></span><br><span class="line"><span class="javascript">                css_text += <span class="string">&quot;z-index: -2; position: relative;&quot;</span>;</span></span><br><span class="line"><span class="javascript">                css_text += <span class="string">&quot;background: transparent url(images/club.jpg) no-repeat scroll &quot;</span>;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; fapaiArr.length; i++) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> card_css = css_text;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> div = <span class="built_in">document</span>.createElement(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> card = fapaiArr[randArr[i]];</span></span><br><span class="line"><span class="javascript">                    card_css += card[<span class="number">0</span>] + <span class="string">&quot;px &quot;</span>;</span></span><br><span class="line"><span class="javascript">                    card_css += card[<span class="number">1</span>] + <span class="string">&quot;px;&quot;</span>;</span></span><br><span class="line"><span class="javascript">                    div.style.cssText = card_css;</span></span><br><span class="line"><span class="javascript">                    tds[i].appendChild(div);</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 注册点击事件</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span> <span class="title">eventRegister</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> table = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;table&#x27;</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="javascript">                table.addEventListener(<span class="string">&#x27;click&#x27;</span>, flip, <span class="literal">true</span>);</span></span><br><span class="line"><span class="javascript">                table.addEventListener(<span class="string">&#x27;click&#x27;</span>, tdClickCount, <span class="literal">true</span>);</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 正反面切换</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span> <span class="title">flip</span>(<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> el = e.target;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span>(el.nodeName == <span class="string">&#x27;TD&#x27;</span>) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> zIndex = el.firstChild.style.zIndex;</span></span><br><span class="line"><span class="javascript">                    el.firstChild.style.zIndex = -zIndex;</span></span><br><span class="line"><span class="javascript">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (el.nodeName == <span class="string">&#x27;DIV&#x27;</span>) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> zIndex = el.style.zIndex;</span></span><br><span class="line"><span class="javascript">                    el.style.zIndex = -zIndex;</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 配对牌面的主函数</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span> <span class="title">tdClickCount</span>(<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> el = e.target;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (el.nodeName === <span class="string">&#x27;TD&#x27;</span>) &#123;</span></span><br><span class="line"><span class="javascript">                    clickCount = (clickCount + <span class="number">1</span>) % matchCount;</span></span><br><span class="line"><span class="javascript">                    <span class="comment">// 保留以等将来配对</span></span></span><br><span class="line"><span class="javascript">                    waitMatch.push(el);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span> (clickCount == <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">console</span>.log(<span class="string">&quot;配对&quot;</span>);</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">var</span> waiting = <span class="keyword">new</span> <span class="built_in">Array</span>();</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; matchCount; i++) &#123;</span></span><br><span class="line"><span class="javascript">                            waiting[i] = waitMatch.shift();</span></span><br><span class="line"><span class="javascript">                        &#125;</span></span><br><span class="line"><span class="javascript">                        match(waiting);</span></span><br><span class="line"><span class="javascript">                    &#125;</span></span><br><span class="line"><span class="javascript">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (el.nodeName === <span class="string">&#x27;DIV&#x27;</span>) &#123;</span></span><br><span class="line"><span class="javascript">                    clickCount = clickCount - <span class="number">1</span>;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> td = el.parentNode;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> index = getIndex(td);</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span> (index != -<span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="javascript">                        removeIndex(index);</span></span><br><span class="line"><span class="javascript">                    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(waitMatch.length);</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 辅助栈和队列的删除元素操作</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span> <span class="title">removeIndex</span>(<span class="params">index</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (index === waitMatch.length - <span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="javascript">                    waitMatch.pop();</span></span><br><span class="line"><span class="javascript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">for</span> (<span class="keyword">var</span> i = index; i &lt; (waitMatch.length - <span class="number">1</span>); i++ ) &#123;</span></span><br><span class="line"><span class="javascript">                        waitMatch[i] = waitMatch[i+<span class="number">1</span>];</span></span><br><span class="line"><span class="javascript">                    &#125;</span></span><br><span class="line"><span class="javascript">                    waitMatch.length -= <span class="number">1</span>;</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 判断waiting数组中各扑克是否匹配，如果匹配返回true，否则返回false</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span> <span class="title">isMatch</span>(<span class="params">waiting</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 如何判断两张牌一样：表示扑克的div的css如果相同，则表示同一张</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> td = waiting[<span class="number">0</span>];</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> div = td.firstChild;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> css = div.style.cssText;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; matchCount; i++) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="comment">// </span></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> tTd = waiting[i];</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> tDiv = tTd.firstChild;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> t_css = tDiv.style.cssText;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span> (css !== t_css) &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">                    &#125;</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 进行配对</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span> <span class="title">match</span>(<span class="params">waiting</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (isMatch(waiting)) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">&quot;扑克消失&quot;</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">setTimeout</span>(vanish, <span class="number">500</span>, waiting);</span></span><br><span class="line"><span class="javascript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">setTimeout</span>(turnBack, <span class="number">500</span>, waiting);</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">&quot;翻回背面！&quot;</span>);</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 翻回背面</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span> <span class="title">turnBack</span>(<span class="params">waiting</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; waiting.length; i++) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> td = waiting[i];</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> div = td.firstChild;</span></span><br><span class="line"><span class="javascript">                    div.style.zIndex = -div.style.zIndex;</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 删除牌面</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span> <span class="title">vanish</span>(<span class="params">waiting</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> td = <span class="literal">null</span>;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> div = <span class="literal">null</span>;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> bg_css = <span class="literal">null</span>;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; waiting.length; i++) &#123;</span></span><br><span class="line"><span class="javascript">                    td = waiting[i];</span></span><br><span class="line"><span class="javascript">                    td.style.background = td_back;</span></span><br><span class="line"><span class="javascript">                    div = td.firstChild;</span></span><br><span class="line"><span class="javascript">                    td.removeChild(div);</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 当页面加载时，执行里面的函数</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                createTable(<span class="number">2</span>,<span class="number">4</span>);</span></span><br><span class="line"><span class="javascript">                fapai(<span class="number">2</span>);</span></span><br><span class="line"><span class="javascript">                eventRegister();</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="1-3-游戏设计思路"><a href="#1-3-游戏设计思路" class="headerlink" title="1.3 游戏设计思路"></a>1.3 游戏设计思路</h2><ul><li>先利用DOM动态生成表格： <strong>createTable()</strong> 方法<ul><li>利用数组的特性(下标)将表格中所有的单元格的id进行设置</li></ul></li><li>编写一个生成随机数的方法： <strong>getrandom()</strong> 方法</li><li>在生成的表格中，利用 <strong>getrandom()</strong> 方法，实现随机发牌： <strong>fapai()</strong> 方法<ul><li>复制两份相同的牌放入新数组中存储</li><li>根据新数组的长度生成一个随机数组</li><li>获取生成好的表格中的所有单元格的id</li><li>为所有的单元格添加css样式，使其由空白的表格显示为未翻面的样子</li></ul></li><li>为表格注册点击事件： <strong>eventRegister()</strong> 方法<ul><li>点击牌进行正反面切换</li><li>正反面切换后，进行牌面的配对</li></ul></li><li>正反面切换： <strong>flip()</strong> 方法<ul><li>通过当前节点是TD还是DIV来表示牌现在是正还是反<ul><li>TD表示正面，DIV表示反面</li></ul></li><li>通过设置zIndex属性的正负值来实现正反的转换</li></ul></li><li>配对牌面： <strong>tdClickCount()</strong> 方法<ul><li>点击后，如果显示反面<ul><li>首先将点击牌面的次数+1，并将该节点存入一个栈中等待，与另一个元素配对</li><li>当clickCount == 0 也就代表当前有两次牌已经翻到正面的时候，就将存储在栈里的栈底元素存到数组里并在栈中删除该元素</li></ul></li><li>当数组拿到了两个元素的时候就可以进行比对： <strong>match()</strong> 方法<ul><li><strong>match()</strong> 方法调用 <strong>isMatch()</strong> 方法辅助判断牌面是否一致<ul><li> <strong>isMatch()</strong> 方法通过传来的待比较的数组，通过这两个标签的css属性是否一致来判断是否是同一张牌</li></ul></li><li>如果是相同的牌<ul><li>删除牌面： <strong>vanish()</strong> 方法</li></ul></li><li>如果不是相同的牌<ul><li>把牌面翻回：<strong>turnBack()</strong> 方法</li></ul></li></ul></li><li>如果点击后显示正面<ul><li>首先将点击牌面的次数-1，获取该节点的父节点，如果父节点的id是存在的<ul><li>利用 <strong>removeIndex()方法</strong> 将待比较元素从栈中弹出，并将队列的长度-1</li></ul></li></ul></li></ul></li><li>通过 <strong>window.load()</strong> 函数在页面加载时，生成表格以及点击事件</li><li>至此，程序主要功能执行完毕…</li></ul><blockquote><p>小记：累了，毁灭吧。我人快麻了，六个半小时才写到这，老程的代码还有他那逻辑快折磨死我了，光整理他的代码就整理了近俩小时。我感觉我快江郎才尽了。我反正是已经尽可能用清晰的逻辑和简洁的语言描述这个破js小游戏了。刚八点，也不知道今天能不能搞完，不想拖到明天再搞。</p></blockquote><blockquote><p> <strong>注意：</strong> </p><ul><li>上面这长长的一段文字描述较之于完整的代码来讲，尤为重要。</li><li>因为答辩不会问的非常的细致，盲猜一下，他的答辩流程：<ul><li>上台，演示你的代码，演示完毕之后会发生两种情况<ul><li>第一种情况：让你打开源码，并找到一个代码块让你描述他的功能<ul><li>其实这种情况是可以卡一个小小的bug的，你可以在你自己的代码上加一些提示性注释，以便你能通顺的说出该代码实现的内容</li></ul></li><li>第二种情况：不让你打开源码，随机指一个功能让你说明说明它是怎么实现的，比如当你点击牌的时候是如何反转的<ul><li>这种情况，是有些棘手的，首先你丢失了代码，只能靠自己的脑子去想它的逻辑，你的思路会非常的磕磕绊绊，表现出来的样子自然而然地是那种一点也不会的那种。</li></ul></li></ul></li><li>答辩完毕，评分、下台</li></ul></li><li>为了尽可能的通常的描述游戏的功能，请<span style="color:red">尽可能地多读几遍设计思路</span>。</li></ul></blockquote><hr><h1 id="2、代码以及功能描述"><a href="#2、代码以及功能描述" class="headerlink" title="2、代码以及功能描述"></a>2、代码以及功能描述</h1><h2 id="页面布局以及样式"><a href="#页面布局以及样式" class="headerlink" title="页面布局以及样式"></a>页面布局以及样式</h2><blockquote><p> <strong>功能描述：</strong> </p></blockquote><ul><li>通过添加css样式使得下面生成动态表格时，表格的边框样式以及表格的大小统一起来。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>name<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="comment">/* 设置表格的边框样式 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">table</span>, <span class="selector-tag">tr</span>, <span class="selector-tag">td</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="comment">/* 将边框设为 1像素大小的蓝色实线 */</span></span></span><br><span class="line"><span class="css">            <span class="attribute">border</span>: <span class="number">1px</span> solid blue;</span></span><br><span class="line"><span class="css">            <span class="comment">/* 将相邻的单元格的边框合为一个 */</span></span></span><br><span class="line"><span class="css">            <span class="attribute">border-collapse</span>: collapse;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="comment">/* 单独设置单元格属性 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">td</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="comment">/* 设置宽高为合适的大小 */</span></span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">157px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">221px</span>;</span></span><br><span class="line"><span class="css">            <span class="comment">/* 设置单元格的背景 */</span></span></span><br><span class="line"><span class="css">            <span class="comment">/* 通过scroll属性调整图片的位置，使其显示为牌的背面 */</span></span></span><br><span class="line"><span class="css">            <span class="attribute">background</span>: transparent <span class="built_in">url</span>(<span class="string">images/club.jpg</span>) no-repeat scroll -<span class="number">957px</span> -<span class="number">670px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 变量的声明</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 四张扑克在图片上的位置</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> pokes = [</span></span><br><span class="line"><span class="javascript">            [-<span class="number">314</span>, -<span class="number">670</span>],</span></span><br><span class="line"><span class="javascript">            [-<span class="number">471</span>, -<span class="number">670</span>],</span></span><br><span class="line"><span class="javascript">            [-<span class="number">632</span>, -<span class="number">670</span>],</span></span><br><span class="line"><span class="javascript">            [-<span class="number">795</span>, -<span class="number">670</span>]</span></span><br><span class="line"><span class="javascript">        ]</span></span><br><span class="line"><span class="javascript">        <span class="comment">// cover表示正反面，1正面 0反面</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> cover = <span class="number">1</span>; </span></span><br><span class="line"><span class="javascript">        <span class="comment">// clickCount 表示点击td的次数，初始为0表示还未点击</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> clickCount = <span class="number">0</span>; </span></span><br><span class="line"><span class="javascript">        <span class="comment">// 指定配对的牌的数目 </span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> matchCount = <span class="number">2</span>; </span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> waitMatch = <span class="keyword">new</span> <span class="built_in">Array</span>(); <span class="comment">// 保存等配对的牌队列</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> td_back = <span class="string">&quot;transparent url(images/bg.png) no-repeat scroll&quot;</span>;</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p> <strong>分析：</strong> </p></blockquote><ul><li>设置了border-collapse的样式：<img src="https://cdn.jsdelivr.net/gh/OhNewbie/Imageaddress/js/202111021509907.png" style="zoom:25%;" /></li><li>未设置border-collapse的样式:<img src="https://cdn.jsdelivr.net/gh/OhNewbie/Imageaddress/js/202111021510959.png" style="zoom:25%;" /></li></ul><blockquote><p>从现在开始的所有代码<span style="color:red">均在script标签</span>中！！！</p></blockquote><h2 id="动态生成表格"><a href="#动态生成表格" class="headerlink" title="动态生成表格"></a>动态生成表格</h2><blockquote><p> <strong>功能描述：</strong> </p></blockquote><ul><li>首先利用dom创建一个table标签，然后利用双重循环遍历的方法生成表格的行和列，rows代表行数，cols代表列数。</li><li>在循环中完成每一行中的单元格的创建，并将单元格的id的值i和j的下标</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">createTable</span>(<span class="params">rows, cols</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 先通过DOM创建一个table标签</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> table = <span class="built_in">document</span>.createElement(<span class="string">&#x27;table&#x27;</span>); </span></span><br><span class="line"><span class="javascript">        <span class="comment">// 外层循环控制表格的行数</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; rows; i++) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">// </span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> tr = <span class="built_in">document</span>.createElement(<span class="string">&#x27;tr&#x27;</span>);</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 内层循环控制表格的列数</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; cols; j++) &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> td = <span class="built_in">document</span>.createElement(<span class="string">&#x27;td&#x27;</span>);</span></span><br><span class="line"><span class="javascript">                <span class="comment">// idVal存储每个单元格的id的值,</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> idVal = i + <span class="string">&quot;&quot;</span> + j;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 设置每个单元格的id名为下标名，即 00，01，02，03，10，11，12，13</span></span></span><br><span class="line"><span class="javascript">                td.setAttribute(<span class="string">&quot;id&quot;</span>, idVal);</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 在tr行标签中添加一个td单元格</span></span></span><br><span class="line"><span class="javascript">                tr.appendChild(td);</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 在table中添加一个tr行标签</span></span></span><br><span class="line"><span class="javascript">            table.appendChild(tr);</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 在body标签中添加一个table表格</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.body.appendChild(table);</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p> <strong>分析：</strong> </p></blockquote><ul><li>createElement()方法：创建一个html元素</li><li>setAttribute()方法：为元素的某个属性赋值</li><li>appendChild()方法：在某个标签中添加一个新的标签</li><li>var idVal = i + “” + j;<ul><li>为什么要在i和j拼接个这个东西？</li><li>当然是因为i和j是整数，直接相加就变成个整数了，咱要的可是个字符串！<ul><li>例如 i=0,j=0, 0+0=0,而0+””+0=”00”</li></ul></li></ul></li></ul><h2 id="利用随机数发牌"><a href="#利用随机数发牌" class="headerlink" title="利用随机数发牌"></a>利用随机数发牌</h2><blockquote><p> <strong>功能描述：</strong></p></blockquote><ul><li>首先编写一个生成随机数的方法： <strong>getrandom(num)</strong> 方法，利用该方法生成num个随机数</li><li>在生成的表格中，利用 <strong>getrandom(num)</strong> 方法，实现随机发牌： <strong>fapai()</strong> 方法</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">getRandom</span>(<span class="params">num</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 定义一个数组用来存储生成的随机数</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> arr = [];</span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i &lt; num;) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 生成一个随机数</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> rand = <span class="built_in">Math</span>.random() * num;</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 将生成的随机数转换为整型存进临时变量tempVal中</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> tempVal = <span class="built_in">parseInt</span>(rand);</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 定义一个标记，判断是否生成了相同的随机数</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> flag = <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; arr.length; j++) &#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 如果生成了一对相同的数，将标记改为true</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span>(tempVal == arr[j]) &#123;</span></span><br><span class="line"><span class="javascript">                    flag = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 如果flag=false则表示没有生成相同的数，将生成的数存入数组里</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span> (!flag) &#123;</span></span><br><span class="line"><span class="javascript">                arr[i++] = tempVal;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> arr;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 再调用生成的随机数组，实现发牌</span></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">fapai</span>(<span class="params">count</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 因为pokes里存放的是四张不同的牌的位置的值，要想实现比对功能数组里应该存放为四对不同的牌位置的值</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 拼接为新的二维数组</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> fapaiArr = pokes.concat(pokes);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 获取一个长度为新数组的随机数数组</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> randArr = getRandom(fapaiArr.length);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 获取生成的表格</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> table = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;table&#x27;</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 获取table中的所有的td</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> tds = table.getElementsByTagName(<span class="string">&#x27;td&#x27;</span>);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 设置刚生成的单元格的模板样式，该初始样式就是只需要再在这个字符串上添加牌面的位置即可保存牌</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> css_text = <span class="string">&quot;width: 157px;&quot;</span>;</span></span><br><span class="line"><span class="javascript">        css_text += <span class="string">&quot;height: 221px;&quot;</span>;</span></span><br><span class="line"><span class="javascript">        css_text += <span class="string">&quot;z-index: -2; position: relative;&quot;</span>;</span></span><br><span class="line"><span class="javascript">        css_text += <span class="string">&quot;background: transparent url(images/club.jpg) no-repeat scroll &quot;</span>;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 将牌保存在打乱顺序的数组中</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; fapaiArr.length; i++) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> card_css = css_text;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> div = <span class="built_in">document</span>.createElement(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 利用随机数的数组将新的数组打乱顺序并根据该数组中的值，来更改css样式</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> card = fapaiArr[randArr[i]];</span></span><br><span class="line"><span class="javascript">            card_css += card[<span class="number">0</span>] + <span class="string">&quot;px &quot;</span>;</span></span><br><span class="line"><span class="javascript">            card_css += card[<span class="number">1</span>] + <span class="string">&quot;px;&quot;</span>;</span></span><br><span class="line"><span class="javascript">            div.style.cssText = card_css;</span></span><br><span class="line"><span class="javascript">            tds[i].appendChild(div);</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p> <strong>描述：</strong></p></blockquote><ul><li><p>上面语句分析可能有些绕，直接上图</p></li><li><p>如何拼接的数组</p></li><li><p> <img src="https://cdn.jsdelivr.net/gh/OhNewbie/Imageaddress/js/202111031956338.jpg"></p></li><li><p>如何将牌打乱顺序并把牌保存在已打乱顺序的牌面</p></li><li><p><img src="https://cdn.jsdelivr.net/gh/OhNewbie/Imageaddress/js/202111031957492.jpg"></p></li><li><p><img src="https://cdn.jsdelivr.net/gh/OhNewbie/Imageaddress/js/202111031958632.jpg"></p></li><li><p>字太丑了，凑合看</p></li></ul><h2 id="注册点击事件"><a href="#注册点击事件" class="headerlink" title="注册点击事件"></a>注册点击事件</h2><blockquote><p> <strong>功能描述：</strong> </p></blockquote><ul><li>通过事件监听器，来注册点击事件，当点击时先翻转牌面，然后点击后进行牌面配对</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">eventRegister</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 先获取到table标签</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> table = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;table&#x27;</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 为table标签添加click事件点击事件的函数为flip，翻转牌面</span></span></span><br><span class="line"><span class="javascript">        table.addEventListener(<span class="string">&#x27;click&#x27;</span>, flip, <span class="literal">true</span>);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 为table继续添加click事件，即当翻转牌面之后，开始进行牌面配对：tdClickCount</span></span></span><br><span class="line"><span class="javascript">        table.addEventListener(<span class="string">&#x27;click&#x27;</span>, tdClickCount, <span class="literal">true</span>);</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p> <strong>分析：</strong></p></blockquote><ul><li>额，语句描述的好像挺明白了，，，也没啥再分析的了。</li></ul><h2 id="翻转牌面"><a href="#翻转牌面" class="headerlink" title="翻转牌面"></a>翻转牌面</h2><blockquote><p> <strong>功能描述：</strong> </p></blockquote><ul><li>当点击牌的时候，将牌翻转，例如：点击后正面翻转为反面，点击后反面翻转为正面，就这两种情况，利用if判断一下就可以</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">flip</span>(<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> el = e.target;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 获取当前节点,判断当前是正面还是反面，TD表示正面，DIV表示反面</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 然后通过设置zIndex属性变换正反面两张图的堆叠顺序,zIndex是负数，则在另一张图的下面，如果是整数就在另一张图的上面</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 意思就是说，当前表格中有有一张正面的牌，一张反面的牌，并假设两张图片的zIndex都为1,如果当前是TD(正面)，就将zIndex属性改为负的，使其隐藏在另一张图层之下。反之亦然</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(el.nodeName == <span class="string">&#x27;TD&#x27;</span>) &#123;</span></span><br><span class="line"><span class="javascript">            </span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> zIndex = el.firstChild.style.zIndex;</span></span><br><span class="line"><span class="javascript">            el.firstChild.style.zIndex = -zIndex;</span></span><br><span class="line"><span class="javascript">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (el.nodeName == <span class="string">&#x27;DIV&#x27;</span>) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> zIndex = el.style.zIndex;</span></span><br><span class="line"><span class="javascript">            el.style.zIndex = -zIndex;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p> <strong>分析：</strong></p><ul><li><img src="https://cdn.jsdelivr.net/gh/OhNewbie/Imageaddress/js/202111031553820.png" alt="代码流程"></li></ul></blockquote><h2 id="配对牌面"><a href="#配对牌面" class="headerlink" title="配对牌面"></a>配对牌面</h2><blockquote><p> <strong>功能描述：</strong> </p></blockquote><ul><li>当点击牌面后，牌面进行翻转。判断牌面被翻转了几次，如果未翻转过或翻转了一次，可以继续翻转。若翻转超过两次，就将第一次反转的牌翻转回去，让程序始终保持两张被翻转</li><li>当翻转了两张牌就可以进行比对了，通过比较这两张牌的位置属性是否一致，来判断是否是同一张牌</li><li>如果不是同一张牌，就将这两张牌翻转回去</li><li>若是同一张牌，就将这两张牌从单元格中删除</li></ul><p> <strong>这是翻转牌面的主函数，里面用到的辅助函数下面也会说。</strong> </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">tdClickCount</span>(<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> el = e.target;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 如果点击过后，牌是正面，就将翻牌的次数+1，clickCount表示翻牌的次数，在程序最开始的时候已经定义好，可以翻到最上边看</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (el.nodeName === <span class="string">&#x27;TD&#x27;</span>) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">// clickCount初始值为0，该语句的含义为：如果点击的次数不超过matchCount次(matchCount表示要配对牌的数目，2次)，</span></span></span><br><span class="line"><span class="javascript">            clickCount = (clickCount + <span class="number">1</span>) % matchCount;</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 通过栈来存储，已经翻转了的牌面，等待与其它的牌面进行比较</span></span></span><br><span class="line"><span class="javascript">            waitMatch.push(el);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 这一段代码逻辑有很大问题！！！</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span> (clickCount == <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&quot;配对&quot;</span>);</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> waiting = <span class="keyword">new</span> <span class="built_in">Array</span>();</span></span><br><span class="line"><span class="javascript">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; matchCount; i++) &#123;</span></span><br><span class="line"><span class="javascript">                    waiting[i] = waitMatch.shift();</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">                match(waiting);</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (el.nodeName === <span class="string">&#x27;DIV&#x27;</span>) &#123;</span></span><br><span class="line"><span class="javascript">            clickCount = clickCount - <span class="number">1</span>;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> td = el.parentNode;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> index = getIndex(td);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span> (index != -<span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="javascript">                removeIndex(index);</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(waitMatch.length);</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p> <strong>分析：</strong></p><ul><li>我疯了，千万别连着点击相同的牌面多次，老程写的这代码有bug，太坑了也，我都快讲完了给我整出个bug来。</li><li>我就说他这段代码逻辑狗屁不对！！！<ul><li>若要避免这种情况发生！，<span style="color:red">请一定不要连续点击同一张牌面</span></li></ul></li><li>人真的要崩溃了，唉。他讲的这课跟X一样……………………………………………………………….. 大大的无语</li><li>瞬间没法往下讲了，待会好好再总结一下，正确的逻辑吧，只要不连续点击同一张牌</li><li>演示一下bug吧….</li><li><img src="https://cdn.jsdelivr.net/gh/OhNewbie/Imageaddress/js/202111031640358.png" alt="令人头大"></li><li>真让人头大</li></ul></blockquote><h2 id="配对牌面的辅助函数"><a href="#配对牌面的辅助函数" class="headerlink" title="配对牌面的辅助函数"></a>配对牌面的辅助函数</h2><blockquote><p> <strong>功能描述：</strong></p></blockquote><ul><li>removeIndex<ul><li>将待比较的元素同时存入一个栈和一个队列中，利用栈和队列这两种数据结构的特性，用栈进行两个牌面的比较，用队列的先进先出的特性让待比较的牌面始终保持为两个。</li></ul></li><li>isMatch<ul><li>根据两个牌面的位置是否相同来分辨牌面是否一致，一致返回true，否则返回false</li></ul></li><li>match<ul><li>调用isMatch，如果牌面一致，在控制台打印信息，并调用vanish方法将这两个牌从单元格删除，若不一致，将调用turnBack方法，将两张牌同时翻转回去</li></ul></li><li>vanish<ul><li>直接将传来的单元格的设置的css样式设为空，即删除了牌</li></ul></li><li>turnBack<ul><li>还是利用zIndex属性将牌面翻转回去</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 辅助栈和队列的删除元素操作</span></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">removeIndex</span>(<span class="params">index</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (index === waitMatch.length - <span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="javascript">            waitMatch.pop();</span></span><br><span class="line"><span class="javascript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">for</span> (<span class="keyword">var</span> i = index; i &lt; (waitMatch.length - <span class="number">1</span>); i++ ) &#123;</span></span><br><span class="line"><span class="javascript">                waitMatch[i] = waitMatch[i+<span class="number">1</span>];</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">            waitMatch.length -= <span class="number">1</span>;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 判断waiting数组中各扑克是否匹配，如果匹配返回true，否则返回false</span></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">isMatch</span>(<span class="params">waiting</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 如何判断两张牌一样：表示扑克的div的css如果相同，则表示同一张</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> td = waiting[<span class="number">0</span>];</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> div = td.firstChild;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> css = div.style.cssText;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; matchCount; i++) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">// </span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> tTd = waiting[i];</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> tDiv = tTd.firstChild;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> t_css = tDiv.style.cssText;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span> (css !== t_css) &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 进行配对</span></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">match</span>(<span class="params">waiting</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (isMatch(waiting)) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&quot;扑克消失&quot;</span>);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">setTimeout</span>(vanish, <span class="number">500</span>, waiting);</span></span><br><span class="line"><span class="javascript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">setTimeout</span>(turnBack, <span class="number">500</span>, waiting);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&quot;翻回背面！&quot;</span>);</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 翻回背面</span></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">turnBack</span>(<span class="params">waiting</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; waiting.length; i++) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> td = waiting[i];</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> div = td.firstChild;</span></span><br><span class="line"><span class="javascript">            div.style.zIndex = -div.style.zIndex;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 删除牌面</span></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">vanish</span>(<span class="params">waiting</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> td = <span class="literal">null</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> div = <span class="literal">null</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> bg_css = <span class="literal">null</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; waiting.length; i++) &#123;</span></span><br><span class="line"><span class="javascript">            td = waiting[i];</span></span><br><span class="line"><span class="javascript">            td.style.background = td_back;</span></span><br><span class="line"><span class="javascript">            div = td.firstChild;</span></span><br><span class="line"><span class="javascript">            td.removeChild(div);</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="加载表格以及点击事件"><a href="#加载表格以及点击事件" class="headerlink" title="加载表格以及点击事件"></a>加载表格以及点击事件</h2><blockquote><p> <strong>功能描述：</strong></p></blockquote><ul><li>通过window.onload()函数使得，在页面生成的时候加载表格以及点击事件的生成</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        createTable(<span class="number">2</span>,<span class="number">4</span>);</span></span><br><span class="line"><span class="javascript">        fapai(<span class="number">2</span>);</span></span><br><span class="line"><span class="javascript">        eventRegister();</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p> <strong>分析</strong>：</p></blockquote><ul><li>onload方法用于在网页加载完毕后立刻执行该函数里边的语句</li><li>createTable(2,4) 创建一个两行四列的表格</li><li>fapai() 执行发牌函数</li><li>eventRegister()生成点击事件</li></ul><h1 id="可选功能"><a href="#可选功能" class="headerlink" title="可选功能"></a>可选功能</h1><p>在这里，可选功能就不给详细代码了，这个也可有可无，加上只会让程序更完美而已，but这个程序本来就错了，连我自己都不想加了，所以给你们说一些思路吧</p><blockquote><p> <strong>可选：</strong> </p></blockquote><ul><li>给整体页面的背景设置一个好看的背景图，这个应该都会吧，就是加个css样式</li><li>给游戏添加开始游戏和结束游戏按钮<ul><li>新建一个网页，添加开始游戏按钮，当点击按钮跳转到游戏页面</li><li>在游戏页面的合适位置添加退出游戏按钮，当点击该按钮的时候返回到开始游戏界面</li></ul></li><li>给游戏加音乐<ul><li>就是将音乐资源下载下来，通过标签引用并设置自动播放</li></ul></li></ul><h2 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h2><p>bg.jpg这个图片应该重新设置一下宽高，调整为157px✖221px，调整后大小才合适。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>至此，程序已完全讲解完毕，有些话要说。</p><p>程序最主要的功能函数，竟然出现了bug，这虽然跟我没有很大直接联系，因为这是老师发的源代码，如果我在昨天的三个小时整理代码的时间能早点测试出来，还是能挽救一下的，可现在还有两天就考证没有别的时间拿来改这游戏代码了。</p><p>不过幸好问题不大，只要避开连续点击还是能实现最终功能。不懂的下周私聊我吧这周是没空了</p><h1 id="一定要看！！！"><a href="#一定要看！！！" class="headerlink" title="一定要看！！！"></a>一定要看！！！</h1><p>还有一件事要说明，并希望你们能遵守</p><ul><li>本人还不太希望这个博客让更多的人知道，如果你能知道这个网站的存在，请不要再进行二次传播，因为我的朋友就那么几个，我也允许他们的朋友(你们)进行访问，但请不要再继续传播出去了。</li><li>不想让更多的人知道的原因<ul><li>太菜，博客写的烂，拿不出手</li><li>没有正式的域名，你们会发现这个网址不是很正经，所以为了避免网站崩溃，才限制人数访问</li></ul></li><li>如果觉得这篇写的还行，就给俺在评论区刷一波666吧，正好拿你们当小白鼠测试这个评论模块是否好用了蛤蛤蛤。</li></ul><h1 id="完结"><a href="#完结" class="headerlink" title="完结"></a>完结</h1><ul><li>完结撒花❀❀❀❀❀❀❀</li></ul>]]></content>
      
      
      <categories>
          
          <category> 期末复习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>给爷爬</title>
      <link href="/posts/c3779c7d/"/>
      <url>/posts/c3779c7d/</url>
      
        <content type="html"><![CDATA[<h1 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h1><h2 id="第一个爬虫"><a href="#第一个爬虫" class="headerlink" title="第一个爬虫"></a>第一个爬虫</h2><h2 id="UA伪装"><a href="#UA伪装" class="headerlink" title="UA伪装"></a>UA伪装</h2><h1 id="解析数据"><a href="#解析数据" class="headerlink" title="解析数据"></a>解析数据</h1><h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><h2 id="BS4"><a href="#BS4" class="headerlink" title="BS4"></a>BS4</h2><h2 id="xpath"><a href="#xpath" class="headerlink" title="xpath"></a>xpath</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>网站维护概要</title>
      <link href="/posts/631b9004/"/>
      <url>/posts/631b9004/</url>
      
        <content type="html"><![CDATA[<h1 id="待优化"><a href="#待优化" class="headerlink" title="待优化"></a>待优化</h1><ul><li>2021-11-1<ul><li><del>对详情页内容修改以及美化详情页</del></li><li><del>添加live-2d的黑色小猫</del></li></ul></li><li>2021-10-31<ul><li><del>更新友情链接的图标</del></li><li>调整背景渐变色与主题色相符</li><li><del>调整文章显示的描述内容</del></li><li><del>增加微信qq链接</del></li><li>~~对文章进行加密~~~</li></ul></li></ul><h1 id="待处理"><a href="#待处理" class="headerlink" title="待处理"></a>待处理</h1><ul><li>2021-11-7<ul><li>本周陆续更新爬虫跟算法文章</li></ul></li><li>2021-11-1<ul><li><del>新增详情页的配置</del></li></ul></li><li>2021-10-31<ul><li>博客系列基础篇的重写</li><li><del>内存对齐知识点的编写</del></li><li><del>致自己的内容上传，并设置密码</del></li><li>重新整理文章的分类和标签</li></ul></li></ul><h1 id="今日事，今日毕"><a href="#今日事，今日毕" class="headerlink" title="今日事，今日毕"></a>今日事，今日毕</h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>亿个知识点之内存对齐</title>
      <link href="/posts/aae4c79f/"/>
      <url>/posts/aae4c79f/</url>
      
        <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><h3 id="什么是内存对齐？"><a href="#什么是内存对齐？" class="headerlink" title="什么是内存对齐？"></a>什么是内存对齐？</h3><ul><li>内存对齐，就是编译器的“管辖范围”，即编译器为程序中的每个数据单元安排在合适的位置上</li></ul><h3 id="为什么要进行内存对齐？"><a href="#为什么要进行内存对齐？" class="headerlink" title="为什么要进行内存对齐？"></a>为什么要进行内存对齐？</h3><ul><li>不是所有的硬件平台都能访问地址上的任意数据。例如某些硬件平台只能在某些地址处取某些特定的数据类型，若取不到则抛出硬件异常</li><li>数据的存储结构应尽可能在自然边界上对齐。原因在于，为了访问未对其的内存，CPU需要进行两次内存访问，而已对齐的的内存仅需要一次访问</li></ul><h3 id="怎么进行对齐？"><a href="#怎么进行对齐？" class="headerlink" title="怎么进行对齐？"></a>怎么进行对齐？</h3><ul><li>对于标准数据类型，其地址只要是该数据类型长度的整数倍就可以</li><li>对于结构或联合类型，第一个数据成员存放在0的位置，往后每个数据成员，先将自身的长度与对齐系数作比较，按照比较小的长度的整数倍进行存放</li><li>每个平台上的编译器都有自己默认的 <strong>对齐系数</strong> ， 但程序员可以用过预编译命令  <code>pragma pack(n)</code> 来修改对齐系数的长度。</li></ul><blockquote><p>上面引出了三个问题，并对这三个问题进行简单描述，以此来了解内存对齐，下面用代码来具体描述一下以上三个问题</p></blockquote><h1 id="什么是内存对齐？-1"><a href="#什么是内存对齐？-1" class="headerlink" title="什么是内存对齐？"></a>什么是内存对齐？</h1><blockquote><p>先给段代码</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line">    <span class="keyword">char</span> b;</span><br><span class="line">&#125;s;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(s));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>请问，主函数中输出语句的结果是什么？</p></blockquote><p>​        有很多人肯定会这么想，int类型占4个字节，char类型占一个字节，所以结构体的大小为5个字节。这么想当然没有问题，可是输出的结果真的是这样的吗？</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 输出结果：</span></span><br><span class="line">8</span><br></pre></td></tr></table></figure><p>​        但实际上，通过运行程序得出的结果为8，即该结构体的大小为8，是程序出错了吗？并不是，这实际上是<strong>内存对齐</strong>导致的。</p><p>​        在计算机中内存空间是按照字节进行划分的，从理论上讲任何类型的变量的访问可以从任何一个位置开始。但是在实际情况中，访问数据类型变量的时候同工厂在该数据类型特定的的内存地址进行访问。</p><p>​        由于数据在内存中存放的位置有了限制，所以各数据类型是按照一定的规则在内存尚佩列，而不是顺序排列，这就是对齐。</p><p>​        内存对齐属于编译器的管辖范围内，是编译器为程序中的每个数据安排在合适的位置上的。</p><h1 id="为什么要内存对齐？"><a href="#为什么要内存对齐？" class="headerlink" title="为什么要内存对齐？"></a>为什么要内存对齐？</h1><ul><li>舍弃内存空间换来获取内存速度的提升</li><li>为了兼容某种具有不同长度的数据类型<ul><li>例如，int类型有int8、int16、int32等等，其分别占用1、2、4个字节，而有的计算机只支持其中一种，例如只支持int32，那么就要用int32去存储int8，而int8占用2字节，int32占用4字节，所以浪费了一定的内存空间。当然也有高级的系统会将两个int8合并到一个int32中。</li></ul></li></ul><blockquote><p>为什么舍弃了内存空间，但换来了速度变快？</p></blockquote><p>​        众所周知，内存虽然是以字节为单位，但是当CPU读取内存的时候并不是按照字节来存取内存，而是按照2字节、4字节、8字节的<code>块</code>来读存取内存的。<code>块</code>在C语言中可以通过<code>pragma pack(n)</code> 来修改块的 <strong>对齐系数</strong> </p><p>​        那我们就假设CPU按照4字节对内存进行读取。下面是一段长度为8个字节的内存单元，里面存放着一个char和一个char型的数据。</p><p>我们认为的所占内存空间：(只占用5个字节)  表A</p><table><thead><tr><th>0</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th></tr></thead><tbody><tr><td>char</td><td>int</td><td>int</td><td>int</td><td>int</td><td></td><td></td><td></td></tr></tbody></table><p>计算机实际上的所占内存空间：(占用了8个字节)  表B</p><table><thead><tr><th>0</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th></tr></thead><tbody><tr><td>char</td><td></td><td></td><td></td><td>int</td><td>int</td><td>int</td><td>int</td></tr></tbody></table><p>​        由于我们假设的CPU是按照4字节的块进行读取内存的，即一次性只能读取4个字节。</p><p>那么表A读取内存的过程：</p><ul><li>先读取char型数据，就要读取0—4这个块的0位置上的数据，才能读取到char型</li><li>再读取int型数据，就要先读取0—4 这个块的1—3位置上的数据，再读取4—8块中的4位置上的数据。最终读取完所有的数据</li><li>上述读取内存的操作共执行了三次</li></ul><p>再来看表B的过程：</p><ul><li>先读取char型数据，就要读取0—4这个块的0，才能读取到char型</li><li>再读取int型数据，直接读取4—8这一整块即可获得int型数据。</li><li>上述读取内存的操作共执行了两次</li></ul><p>​        再众所周知，CPU工作速度是很快的，而内存速度比CPU要慢一些，所以CPU对内存的读取是非常慢的，可以通过缓存来改善，又是一个知识点这里就不展开讲了。吧啦吧啦…. 总之，少一次对内存的访问，肯定是要比多一次访问内存提高了很多速度的。</p><p>​        所以，内存对齐虽然浪费了内存的空间，但是再读取速度上有很大的提升。</p><blockquote><p>思考一下：内存对齐对正常的数据类型的影响是这样的，那内存对齐对结构体和联合这样的特殊的数据类型的影响又是怎样的？</p></blockquote><h1 id="内存对齐的规则"><a href="#内存对齐的规则" class="headerlink" title="内存对齐的规则"></a>内存对齐的规则</h1><h3 id="对于普通数据类型"><a href="#对于普通数据类型" class="headerlink" title="对于普通数据类型"></a>对于普通数据类型</h3><p>地址是它长度的整数倍即可</p><h3 id="对于特殊数据类型"><a href="#对于特殊数据类型" class="headerlink" title="对于特殊数据类型"></a>对于特殊数据类型</h3><p>​        例如，在结果体中，编译器为结构体的每一个成员按照自然边界(alignment)分配空间，每个成员变量按照在结构体中声明的顺序在内存中顺序存储，第一个成员变量和整个结构体的地址相同，如同数组a的地址和a[0]的地址也是一样的。</p><p>对于特殊类型的内存对齐规则：</p><ul><li>第一个成员在结构体的offset为0的地址处，意味着结构体的第一个成员必须从头开始</li><li>之后的每个成员都相对于自己大小的整数倍</li><li>结构体的总大小为最大对齐数的整数倍<ul><li>什么是最大对齐数？即所有成员中长度最长的数据类型的长度为该结构体的最大对齐数</li></ul></li><li>若是嵌套结构，嵌套的结构体对齐到自己的最大对齐数的整数倍数</li></ul><blockquote><p>先看段代码</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line">    <span class="keyword">double</span> b;</span><br><span class="line">    <span class="keyword">char</span> c;</span><br><span class="line">&#125;s1;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="keyword">double</span> b;</span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line">    <span class="keyword">char</span> c;</span><br><span class="line">&#125;s2;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;结构体内相同的数据类型，但数据成员的顺序不一致：\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\t结构体s1的大小：%d\n&quot;</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(s1));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\t结构体s.a的大小：%d\n&quot;</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(s1.a));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\t结构体s.b的大小：%d\n&quot;</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(s1.b));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\t结构体s.c的大小：%d\n&quot;</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(s1.c));</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;结构体s2的大小：%d\n&quot;</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(s2));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\t结构体s.a的大小：%d\n&quot;</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(s2.a));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\t结构体s.b的大小：%d\n&quot;</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(s2.b));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\t结构体s.c的大小：%d\n&quot;</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(s2.c));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>猜一下s1和s2的大小分别为多少，且是否一致？</p></blockquote><p>若猜测s1大小为17，s2大小为13，那很遗憾又错啦！</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 运行结果</span></span><br><span class="line">结构体s1的大小：24</span><br><span class="line">结构体s.a的大小：4</span><br><span class="line">结构体s.b的大小：8</span><br><span class="line">结构体s.c的大小：1</span><br><span class="line">结构体s2的大小：16</span><br><span class="line">结构体s.a的大小：4</span><br><span class="line">结构体s.b的大小：8</span><br><span class="line">结构体s.c的大小：1</span><br></pre></td></tr></table></figure><p>用图表示s1所占内存空间：</p><p>0—7</p><table><thead><tr><th>0</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th></tr></thead><tbody><tr><td>int</td><td>int</td><td>int</td><td>int</td><td></td><td></td><td></td><td></td></tr></tbody></table><p>8—15</p><table><thead><tr><th>8</th><th>9</th><th>10</th><th>11</th><th>12</th><th>13</th><th>14</th><th>15</th></tr></thead><tbody><tr><td>double</td><td>double</td><td>double</td><td>double</td><td>double</td><td>double</td><td>double</td><td>double</td></tr></tbody></table><p>16—23</p><table><thead><tr><th>16</th><th>17</th><th>18</th><th>19</th><th>20</th><th>21</th><th>22</th><th>23</th></tr></thead><tbody><tr><td>char</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td></tr></tbody></table><p>用图表示s2所占内存空间：</p><p>0—7</p><table><thead><tr><th>0</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th></tr></thead><tbody><tr><td>double</td><td>double</td><td>double</td><td>double</td><td>double</td><td>double</td><td>double</td><td>double</td></tr></tbody></table><p>8—15</p><table><thead><tr><th>8</th><th>9</th><th>10</th><th>11</th><th>12</th><th>13</th><th>14</th><th>15</th></tr></thead><tbody><tr><td>int</td><td>int</td><td>int</td><td>int</td><td>char</td><td></td><td></td><td></td></tr></tbody></table><blockquote><p>s1实际占用的内存空间为24</p><ul><li>根据特殊数据类型的对齐规则可知，结构体的大小等于最大对齐数的整数倍<ul><li>s1中成员长度最长的是double，长度为8，所以s1的最大对齐数为8</li><li>即结构体的总长度为8的整数倍</li></ul></li><li>其结构体中的成员的位置都相对于自己长度的整数倍</li><li>所以当结构体读取到最后一个成员时，其总长度为17，但是该长度不够8的整数倍，所以补7位，使其总长度为24位</li></ul><p> s2实际占用的内存空间为16</p><ul><li>s2结构体的最大对齐数为8，但不同的是由于读取成员声明的顺序不同，通过内存对齐后，其读取完最后一个成员时，总长度为13，但长度还是不够8的整数倍，所以补3位，使其长度为16位</li></ul></blockquote><p>​        从上面可以得出一个结论，在结构体中，成员的声明顺序会影响整个结构体的大小，若错误的声明则会导致原本不大的结构体变得很大，导致浪费很多的内存空间。所以成员的声明顺序尤为重要。</p><p>​        成员的声明顺序，最好由数据类型由大到小进行声明，这样是最节省空间的。</p><h1 id="自定义对齐系数"><a href="#自定义对齐系数" class="headerlink" title="自定义对齐系数"></a>自定义对齐系数</h1><p>我们可以通过<code>#pragma pack(n)</code> 来修改对齐系数，使得cpu一次性读取块的大小为n、</p><blockquote><p>照例先看代码</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line">    <span class="keyword">char</span> b;</span><br><span class="line">&#125;s;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(s));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>还记得运行结果吗？</p></blockquote><p>答案是8</p><blockquote><p>那我们将这段代码修改一下</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> pack(1)</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line">    <span class="keyword">char</span> b;</span><br><span class="line">&#125;s;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(s));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>结果还是8吗？</p></blockquote><p>当然不是，因为我们通过预编译命令将每个块的大小设为了1，那么CPU读取该结构体的顺序就变成了</p><table><thead><tr><th>0</th><th>1</th><th>2</th><th>3</th><th>4</th></tr></thead><tbody><tr><td>int</td><td>int</td><td>int</td><td>int</td><td>char</td></tr></tbody></table><p>结果显而易见的变为了5</p><ul><li>程序先读取int型，由于块的大小为1所以只能一个字节一个字节的读取，所以一个int型就需要进行四次内存读取</li><li>再读取char型，此时只需要读取一次内存即可，而且对长度只有1字节的char型数据来说，不会浪费额外的内存空间</li><li>总之将块的大小从默认的4改为1之后，节省了内存空间，但额外的增加了三次读取内存的操作，相当耗时了</li></ul><p>​        所以，随意改动块的大小会造成额外的内存操作，当然也有特殊的情况，例如结构体所有的成员都是char型，如果默认的块为4，他会对该结构体读取n次，但浪费了n(4-1)个字节。如果在此时将块的大小改为1，则该结构体的读取次数虽然还是n次，但没有浪费额外的内存空间。</p><p>​        但还是建议，不要随意修改默认的块大小，造成不必要的麻烦</p><h1 id="完结"><a href="#完结" class="headerlink" title="完结"></a>完结</h1><p>撒花❀❀❀❀❀❀❀❀❀❀</p>]]></content>
      
      
      <categories>
          
          <category> 亿点小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>手把手_教你吸引二次元</title>
      <link href="/posts/bbba29c6/"/>
      <url>/posts/bbba29c6/</url>
      
        <content type="html"><![CDATA[<h1 id="安装模块"><a href="#安装模块" class="headerlink" title="安装模块"></a>安装模块</h1><ul><li>首先，打开cmd</li><li>跳转到你本地博客的根目录</li><li>执行如下命令</li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure><h1 id="下载模型"><a href="#下载模型" class="headerlink" title="下载模型"></a>下载模型</h1><p>​        安装好相应的模块之后，就可以下载相应的模型了。</p><p>​        一些模型包名：</p><ul><li>live2d-widget-model-chitose</li><li>live2d-widget-model-epsilon2_1</li><li>live2d-widget-model-gf</li><li>live2d-widget-model-haru/01</li><li>live2d-widget-model-haru/02</li><li>live2d-widget-model-haruto</li><li>live2d-widget-model-hibiki</li><li>live2d-widget-model-hijiki</li><li>live2d-widget-model-izumi</li><li>live2d-widget-model-koharu</li><li> live2d-widget-model-miku</li><li>live2d-widget-model-ni-j</li><li>live2d-widget-model-nico</li><li>live2d-widget-model-nietzsche</li><li>live2d-widget-model-nipsilon</li><li>live2d-widget-model-nito</li><li>live2d-widget-model-shizuku</li><li>live2d-widget-model-tororo</li><li>live2d-widget-model-tsumiki</li><li>live2d-widget-model-unitychan</li><li>live2d-widget-model-wanko</li><li>live2d-widget-model-z16</li></ul><blockquote><p>模型预览地址：<a href="https://blog.csdn.net/wang_123_zy/article/details/87181892">https://blog.csdn.net/wang_123_zy/article/details/87181892</a></p></blockquote><p>开始下载：</p><ul><li>打开cmd，并进入博客根目录</li><li>执行命令<code>npm install --save 包名</code>，例如</li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save live2d-widget-model-haru/<span class="number">01</span></span><br></pre></td></tr></table></figure><h1 id="配置模型"><a href="#配置模型" class="headerlink" title="配置模型"></a>配置模型</h1><ul><li>在博客根目录打开_config.yml文件</li><li>将如下代码复制到文件最后</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Live2D</span></span><br><span class="line"><span class="comment">## https://github.com/EYHN/hexo-helper-live2d</span></span><br><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># enable: false</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span> <span class="comment"># 默认</span></span><br><span class="line">  <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span> <span class="comment"># 插件在站点上的根目录(相对路径)</span></span><br><span class="line">  <span class="attr">pluginJsPath:</span> <span class="string">lib/</span> <span class="comment"># 脚本文件相对与插件根目录路径</span></span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span> <span class="comment"># 模型文件相对与插件根目录路径</span></span><br><span class="line">  <span class="comment"># scriptFrom: jsdelivr # jsdelivr CDN</span></span><br><span class="line">  <span class="comment"># scriptFrom: unpkg # unpkg CDN</span></span><br><span class="line">  <span class="comment"># scriptFrom: https://cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js # 你的自定义 url</span></span><br><span class="line">  <span class="attr">tagMode:</span> <span class="literal">false</span> <span class="comment"># 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span></span><br><span class="line">  <span class="attr">debug:</span> <span class="literal">false</span> <span class="comment"># 调试, 是否在控制台输出日志</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="comment"># 文件名</span></span><br><span class="line">    <span class="attr">scale:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">hHeadPos:</span> <span class="number">0.5</span></span><br><span class="line">    <span class="attr">vHeadPos:</span> <span class="number">0.618</span></span><br><span class="line">    <span class="comment"># use: live2d-widget-model-wanko # npm-module package name</span></span><br><span class="line">    <span class="comment"># use: wanko # 博客根目录/live2d_models/ 下的目录名</span></span><br><span class="line">    <span class="comment"># use: ./wives/wanko # 相对于博客根目录的路径</span></span><br><span class="line">    <span class="comment"># use: https://cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 你的自定义 url</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">superSample:</span> <span class="number">2</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">150</span><span class="comment"># 人物宽度</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">300</span><span class="comment"># 人物高度</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">right</span><span class="comment"># 人物出现的位置</span></span><br><span class="line">    <span class="attr">hOffset:</span> <span class="number">0</span><span class="comment"># 水平移动</span></span><br><span class="line">    <span class="attr">vOffset:</span> <span class="number">-20</span><span class="comment"># 垂直移动</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">true</span> <span class="comment"># 是否在移动设备上显示</span></span><br><span class="line">    <span class="attr">scale:</span> <span class="number">0.2</span> <span class="comment"># 移动设备上的缩放       </span></span><br><span class="line">  <span class="attr">react:</span></span><br><span class="line">    <span class="attr">opacityDefault:</span> <span class="number">0.7</span></span><br><span class="line">    <span class="attr">opacityOnHover:</span> <span class="number">0.8</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>在根目录下新建<code>live2d_models</code>文件夹</li><li>在<code>node_modules</code>目录下找到我们刚刚下载好的模型文件，并打开。</li></ul><ul><li><p>将复制package.json，并对01文件夹下的package.json进行覆盖</p></li><li><p>再将01目录复制到根目录下的<code>live2d_models</code></p></li><li><p>最后再将<code>01</code>改名为live2d-widget-model-haru</p></li><li><p>再次打开_config.yml修改相应内容</p></li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-haru</span></span><br></pre></td></tr></table></figure><h1 id="部署博客"><a href="#部署博客" class="headerlink" title="部署博客"></a>部署博客</h1><ul><li>依次执行如下命令</li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 切换至博客根路径</span><br><span class="line"><span class="built_in">cd</span> Blog</span><br><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>进入到你的博客就可以看到效果了！</p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JWT</title>
      <link href="/posts/1bb08f7a/"/>
      <url>/posts/1bb08f7a/</url>
      
        <content type="html"><![CDATA[<h1 id="什么是JWT"><a href="#什么是JWT" class="headerlink" title="什么是JWT"></a>什么是JWT</h1><p>JWT（json web token），也就是通过json形式作为web应用中的令牌，用于在各方之间安全地将信息作为json对象传输，在数据过程中还可以完成数据加密，签名等相关处理</p><h1 id="JWT能做什么"><a href="#JWT能做什么" class="headerlink" title="JWT能做什么"></a>JWT能做什么</h1><h2 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h2><p>​        一旦用户登录，每个后续的请求将包含JWT，从而允许用户访问该令牌允许的路由，服务和资源。单点登录是JWT最广泛使用的功能</p><h2 id="信息交换"><a href="#信息交换" class="headerlink" title="信息交换"></a>信息交换</h2><p>​        JWT可以在各方之间安全地传输信息的好方法，因为可以对JWT进行签名（公钥对，私钥对），由于签名是使用签头和有效负载计算的，因此您还可以验证内容是否遭到篡改。</p><h1 id="为什么是JWT"><a href="#为什么是JWT" class="headerlink" title="为什么是JWT"></a>为什么是JWT</h1><h2 id="基于传统的session认证"><a href="#基于传统的session认证" class="headerlink" title="基于传统的session认证"></a>基于传统的session认证</h2><h4 id="认证方式"><a href="#认证方式" class="headerlink" title="认证方式"></a>认证方式</h4><p>​        HTTP协议是一种无状态的协议(接收请求并响应之后立马断开)，意味着如果用户向我们的应用提供了用户名和密码来进行登录验证，那么下一次请求时，还要进行一次用户认证才可以。</p><p>​        这样会产生一些问题，假如用户登录成功进入到了主页面，此时服务器瘫痪，但用户依然能访问到主界面(虽然获取不到任何动态数据)，但这样也是不可以的</p><p>​        因为根据HTTP协议，我们并不知道是哪个用户发出的请求，为了能让应用识别出是哪个应用所发出的请求，我们只能在服务器创建一个会话(session)，会话会在第一次响应时以cookie的方式传递给浏览器sessionId，之后用户发送请求时默认携带cookie，以此来识别请求来自哪个用户。</p><h4 id="认证流程"><a href="#认证流程" class="headerlink" title="认证流程"></a>认证流程</h4><p><img src="https://cdn.jsdelivr.net/gh/OhNewbie/Imageaddress/img/202110301035399.png" alt="基于session的认证"></p><h4 id="存在的问题"><a href="#存在的问题" class="headerlink" title="存在的问题"></a>存在的问题</h4><ul><li>每个用户经过验证之后服务端都要进行一次记录，而session通常保存在内存中，一旦用户数量变多，服务端开销就会变大</li><li>用户认证之后，如果session被保存在内存中，意味着以后的请求都必须请求在同一个服务器上，在分布式应用中限制负载均衡，限制了应用的扩展能力</li><li>cookie被截获，容易被跨站请求伪造攻击(CSRF)，<strong>jwt也是会被截获的</strong></li></ul><h2 id="基于JWT认证"><a href="#基于JWT认证" class="headerlink" title="基于JWT认证"></a>基于JWT认证</h2><h4 id="认证方式-1"><a href="#认证方式-1" class="headerlink" title="认证方式"></a>认证方式</h4><ul><li>前端通过表单将登录信息发送到后端接口</li><li>后端核对用户名和密码成功后，将用户的id及其他信息作为JWT Payload(负载)，将其与头部<strong>分别</strong>进行base64编码拼接后签名，形成一个JWT。token格式：lll.zzz.xxx的字符串</li><li>后端将JWT字符串作为登录成功的返回结果返回给前端，前端将返回的结果保存在localStorage或SessionStorage上，退出登录时删除保存的JWT即可</li><li>前端每次请求时将，JWT放入HTTP Header中的Authorization位（解决XSS问题和CSRF问题）<ul><li>XSS：注入攻击</li></ul></li><li>后端检查是否存在，例如：检查签名正确性，检查token是否过期，检查token的接收方是否正确</li><li>验证通过后，返回响应结果</li></ul><h4 id="认证流程-1"><a href="#认证流程-1" class="headerlink" title="认证流程"></a>认证流程</h4><p><img src="https://cdn.jsdelivr.net/gh/OhNewbie/Imageaddress/img/202110301035326.png" alt="基于JWT"></p><h4 id="JWT优势"><a href="#JWT优势" class="headerlink" title="JWT优势"></a>JWT优势</h4><ul><li>简洁：可以通过URL发送，POST参数发送，HTTP Header发送。</li><li>自包含：Payload包含了所有用户所需要的信息，避免多次查询数据库</li><li>token以json加密的形式保存在客户端，可跨语言，任何web形式都支持</li><li>不需要在服务端保存会话信息，利于分布式微服务</li></ul><h1 id="JWT的结构"><a href="#JWT的结构" class="headerlink" title="JWT的结构"></a>JWT的结构</h1><h2 id="令牌组成"><a href="#令牌组成" class="headerlink" title="令牌组成"></a>令牌组成</h2><ul><li>标头：Header</li><li>有效载荷：Payload</li><li>签名：Signature</li><li>token格式：Header.Payload.Signature</li></ul><h4 id="Header"><a href="#Header" class="headerlink" title="Header"></a>Header</h4><ul><li>标头通常由两部分组成：令牌的类型、所使用的签名算法</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 明文格式</span></span><br><span class="line"><span class="comment">// alg,令牌所使用的算法例如HMAC、SHA256、RSA,默认用HS256</span></span><br><span class="line"><span class="comment">// typ,令牌所使用的类型，默认JWT</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;alg&quot;</span>: <span class="string">&quot;HS256&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;typ&quot;</span>: <span class="string">&quot;JWT&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>将该json数据的明文格式通过base64编码格式编码后完成JWT的第一部分</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通过编码工具编码后的结果</span></span><br><span class="line">ewogICAgImFsZyI6ICJIUzI1NiIsCiAgICAidHlwIjogIkpXVCIKfQ==</span><br></pre></td></tr></table></figure><p>base64编码在线转换网址：<a href="https://www.qqxiuzi.cn/bianma/base64.htm">https://www.qqxiuzi.cn/bianma/base64.htm</a></p><h4 id="Payload"><a href="#Payload" class="headerlink" title="Payload"></a>Payload</h4><ul><li>有效负载由声明部分组成，声明是有关的实体和其他数据的声明(例如，用户id，用户名，身份权限)，但不要放敏感信息例如密码。同样由base64编码后组成JWT的第二部分</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 明文格式</span></span><br><span class="line">&#123;</span><br><span class="line">    “userid”: <span class="string">&quot;12312312&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;法外狂徒&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;admin&quot;</span>: <span class="literal">true</span> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Signature"><a href="#Signature" class="headerlink" title="Signature"></a>Signature</h4><ul><li>签名由header+payload+随机盐值部分组成。然后使用header中指定的签名算法进行加密。</li><li>随机盐值：也就是私钥，不能让除了自己之外的任何人知道</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 私钥：!Q@W#E)(</span></span><br><span class="line">String secret = <span class="string">&quot;!Q@W#E)(&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 加密，header中的签名算法位HMACSHA256</span></span><br><span class="line">HMACSHA256(base64UrlEncode(header)+base64UrlEncode(payload),secret);</span><br></pre></td></tr></table></figure><h2 id="签名目的"><a href="#签名目的" class="headerlink" title="签名目的"></a>签名目的</h2><p>​        当用户第一次发起请求时，服务端响应数据的同时会将令牌(header.payload.signature)发给用户，当用户往后的每一次请求都会默认携带该令牌。</p><p>​        之后用户的每一次请求，都会携带令牌(token)。服务器接收到用户的请求后，先获取token中的header和payload与私钥进行签名，得出的字符串与token中的signature比对。若比对一致，给予响应，不一致打回。</p><p>​        假设有恶意用户截取到请求中的令牌，并篡改了三部分中任意一部分的数据，都会比对不成功，所以恶意用户无法截取到数据。</p><p>​        所以最重要的就是随机盐值，<strong>不能透漏给任何一个人</strong>。</p><h4 id="信息安全问题"><a href="#信息安全问题" class="headerlink" title="信息安全问题"></a>信息安全问题</h4><p>​        base64是编码，既然是编码，那我就可以将其解码，所以token的所有信息我截取到之后都能分析出来吗？</p><p>​        所以，在JWT中，不应该在负载里加入任何敏感信息，比如真实姓名、密码、手机号等。而且JWT提倡使用HTTPS协议进行传输，更为安全。</p><h2 id="Token举例"><a href="#Token举例" class="headerlink" title="Token举例"></a>Token举例</h2><p>编码前：</p><p><img src="https://cdn.jsdelivr.net/gh/OhNewbie/Imageaddress/img/202110301035070.png" alt="编码前"></p><p>经过base64编码后：</p><p><img src="https://cdn.jsdelivr.net/gh/OhNewbie/Imageaddress/img/202110301035374.png" alt="编码后"></p><h1 id="使用JWT"><a href="#使用JWT" class="headerlink" title="使用JWT"></a>使用JWT</h1><h2 id="导入依赖"><a href="#导入依赖" class="headerlink" title="导入依赖"></a>导入依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.auth0/java-jwt --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.auth0<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>java-jwt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.18.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="生成Token"><a href="#生成Token" class="headerlink" title="生成Token"></a>生成Token</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 随机盐值</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String SECRET = <span class="string">&quot;!Q@W#E)(&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置过期时间</span></span><br><span class="line">Calender instance = Calender.getInstance();</span><br><span class="line">instance.add(Calender.DATE, <span class="number">7</span>)</span><br><span class="line"></span><br><span class="line">HashMap&lt;String,Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">String token = JWT.create()</span><br><span class="line">    .withHeader(map)</span><br><span class="line">    .withClam(<span class="string">&quot;userId&quot;</span>,<span class="number">12123</span>)</span><br><span class="line">    .withClam(<span class="string">&quot;username&quot;</span>,<span class="string">&quot;法外狂徒&quot;</span>)</span><br><span class="line">    。withExpriesAt(instance.getTime())<span class="comment">// 指定令牌过期时间</span></span><br><span class="line">    .sign(Algorithm.HMAC256(SECRET));</span><br></pre></td></tr></table></figure><h2 id="根据令牌和签名解析数据"><a href="#根据令牌和签名解析数据" class="headerlink" title="根据令牌和签名解析数据"></a>根据令牌和签名解析数据</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建验证对象</span></span><br><span class="line">JWTVerifier jwtVerifier = JWT.require(Algorithm.HMAC256(SECRET)).build();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 解析token</span></span><br><span class="line">DecodedJWT verify = jwtVerifier.verify(token);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取负载中的信息</span></span><br><span class="line">System.out.println(verify.getClaim(<span class="string">&quot;userId&quot;</span>).asInt());</span><br><span class="line">System.out.println(verify.getClaim(<span class="string">&quot;username&quot;</span>).asString());</span><br><span class="line"><span class="comment">// 获取过期时间</span></span><br><span class="line">System.out.println(verify);</span><br></pre></td></tr></table></figure><h2 id="常见的异常"><a href="#常见的异常" class="headerlink" title="常见的异常"></a>常见的异常</h2><ul><li>SingatureVerificationException：     签名不一致</li><li>TokenExpiredException：     令牌过期异常</li><li>AlgorithmMismatchException：     算法不匹配异常</li><li>InvalidClaimException：     失效的payload异常</li><li>……</li></ul><h1 id="封装工具类"><a href="#封装工具类" class="headerlink" title="封装工具类"></a>封装工具类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JWTUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String SIGN = <span class="string">&quot;!Q@W#E$R&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成token</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getToken</span><span class="params">(Map&lt;String,String&gt; map)</span> </span>&#123;</span><br><span class="line">        Calendar instance  = Calendar.getInstance();</span><br><span class="line">        instance.add(Calendar.DATE, <span class="number">7</span>); <span class="comment">// 过期时间 7天</span></span><br><span class="line"></span><br><span class="line">        JWTCreator.Builder builder = JWT.create();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// payload</span></span><br><span class="line">        map.forEach((k,v)-&gt;&#123;</span><br><span class="line">            builder.withClaim(k,v);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 指定令牌过期时间</span></span><br><span class="line">        String token = builder.withExpiresAt(instance.getTime()).sign(Algorithm.HMAC256(SIGN));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> token;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 验证token合法性</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DecodedJWT <span class="title">verify</span><span class="params">(String token)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> JWT.require(Algorithm.HMAC256(SIGN)).build().verify(token);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取token信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DecodedJWT <span class="title">getTokenInfo</span><span class="params">(String token)</span> </span>&#123;</span><br><span class="line">        DecodedJWT verify = JWT.require(Algorithm.HMAC256(SIGN)).build().verify(token);</span><br><span class="line">        <span class="keyword">return</span> verify;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="简单整合Springboot"><a href="#简单整合Springboot" class="headerlink" title="简单整合Springboot"></a>简单整合Springboot</h1><h2 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- jwt --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.auth0<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>java-jwt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.18.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- mybatis-plus --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- mysql --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- druid --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- shiro --&gt;</span></span><br></pre></td></tr></table></figure><h2 id="编写配置文件"><a href="#编写配置文件" class="headerlink" title="编写配置文件"></a>编写配置文件</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/`数据库名`?useSSL=false&amp;serverTimezone=UTC</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br></pre></td></tr></table></figure><h2 id="编写实体类"><a href="#编写实体类" class="headerlink" title="编写实体类"></a>编写实体类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="comment">// 因为懒所以使用Lombok中的这两个注解实现setter、getter、toString。 emmmm我投靠敌方阵营了！真香！</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="编写Mapper接口和mapper-xml"><a href="#编写Mapper接口和mapper-xml" class="headerlink" title="编写Mapper接口和mapper.xml"></a>编写Mapper接口和mapper.xml</h2><ul><li>此接口和xml使用mybatis-plus自动生成，不会请自行百度。或转看mybatis-plus教程。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 接口</span></span><br><span class="line">pubic <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="function">User <span class="title">login</span><span class="params">(User user)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;login&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;User的全限定名&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User的全限定名&quot;</span>&gt;</span></span><br><span class="line">    select * from `user` where username = #&#123;username&#125; and password = #&#123;password&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="编写Service接口和实现类"><a href="#编写Service接口和实现类" class="headerlink" title="编写Service接口和实现类"></a>编写Service接口和实现类</h2><ul><li>此接口和xml使用mybatis-plus自动生成，不会请自行百度。或转看mybatis-plus教程。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IUserService</span> <span class="keyword">extends</span> <span class="title">IService</span>&lt;<span class="title">User</span>&gt; </span>&#123;</span><br><span class="line">    <span class="function">User <span class="title">login</span><span class="params">(User user)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">extends</span> <span class="title">ServiceImpl</span>&lt;<span class="title">UserMapper</span>, <span class="title">User</span>&gt; <span class="keyword">implements</span> <span class="title">IUserService</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">login</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">        User userDB = UserMapper.login(adm);</span><br><span class="line">        <span class="keyword">if</span> (userDB!=<span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> userDB;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;登陆失败&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="编写控制器"><a href="#编写控制器" class="headerlink" title="编写控制器"></a>编写控制器</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginController</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger log = LoggerFactory.getLogger(LoginController.class);</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> IAdmService service;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@PostMapping(&quot;/&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">login</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">&quot;用户名：[&#123;&#125;]&quot;</span>,user.getUserName());</span><br><span class="line">        log.info(<span class="string">&quot;密码：[&#123;&#125;]&quot;</span>,user.getPassword());</span><br><span class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            User userDB = service.login(user);</span><br><span class="line">            Map&lt;String, String&gt; payload = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">            payload.put(<span class="string">&quot;id&quot;</span>, userDB.getUserId());</span><br><span class="line">            payload.put(<span class="string">&quot;name&quot;</span>, userDB.getUserName());</span><br><span class="line">            <span class="comment">// 生成JWT令牌</span></span><br><span class="line">            String token = JWTUtils.getToken(payload);</span><br><span class="line">            map.put(<span class="string">&quot;state&quot;</span>,<span class="keyword">true</span>);</span><br><span class="line">            map.put(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;认证成功&quot;</span>);</span><br><span class="line">            <span class="comment">// 响应token</span></span><br><span class="line">            map.put(<span class="string">&quot;token&quot;</span>,token);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            map.put(<span class="string">&quot;state&quot;</span>,<span class="keyword">false</span>);</span><br><span class="line">            map.put(<span class="string">&quot;msg&quot;</span>,e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="关于请求的验证"><a href="#关于请求的验证" class="headerlink" title="关于请求的验证"></a>关于请求的验证</h1><p>在单体应用中，编写拦截器，并配置</p><h2 id="编写拦截器"><a href="#编写拦截器" class="headerlink" title="编写拦截器"></a>编写拦截器</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JWTInterceptor</span> <span class="keyword">implements</span> <span class="title">HandlerInterceptor</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="comment">// 获取请求头中的令牌</span></span><br><span class="line">        String token = request.getHeader(<span class="string">&quot;token&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            JWTUtils.verify(token);<span class="comment">// 验证令牌</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;<span class="comment">// 放行请求</span></span><br><span class="line">        &#125; <span class="keyword">catch</span>(SingatureVerificationException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            map.put(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;无效签名！&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span>(TokenExpiredException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            map.put(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;token过期！&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span>(AlgorithmMismatchException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            map.put(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;token算法不一致！&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span>(InvalidClaimException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            map.put(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;token无效！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        map.put(<span class="string">&quot;state&quot;</span>, <span class="keyword">false</span>);<span class="comment">// 设置状态</span></span><br><span class="line">        <span class="comment">// 将map转换为json</span></span><br><span class="line">        String json = <span class="keyword">new</span> ObjectMapper().writeValueAsString(map);</span><br><span class="line">        response.setContentType(<span class="string">&quot;application/json;charset=UTF-8&quot;</span>);</span><br><span class="line">        respinse.getWriter().println(json);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyMvcConfig</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> </span>&#123;</span><br><span class="line">        registry.addInterceptor(<span class="keyword">new</span> JWTIntercepator())</span><br><span class="line">                .addPathPatterns(<span class="string">&quot;&quot;</span>)    <span class="comment">// 其它接口token验证</span></span><br><span class="line">                .excludePathPatterns(<span class="string">&quot;&quot;</span>);   <span class="comment">// 所有用户放行</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="在控制器中添加业务"><a href="#在控制器中添加业务" class="headerlink" title="在控制器中添加业务"></a>在控制器中添加业务</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">test</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">    Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">String token = request.getHeader(<span class="string">&quot;token&quot;</span>);</span><br><span class="line">    DecodedJWT verify = JWTUtils.verify(token);</span><br><span class="line">    log.info(<span class="string">&quot;usrname:[&#123;&#125;]&quot;</span>,verify.getClaim(<span class="string">&quot;username&quot;</span>).asString());</span><br><span class="line">    map.put(<span class="string">&quot;state&quot;</span>,<span class="keyword">true</span>);</span><br><span class="line">    map.put(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;认证成功&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> map;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="完结"><a href="#完结" class="headerlink" title="完结"></a>完结</h1><p>撒花！！！❀❀❀</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> 安全 </tag>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring</title>
      <link href="/posts/6c92115f/"/>
      <url>/posts/6c92115f/</url>
      
        <content type="html"><![CDATA[<h1 id="HelloSpring"><a href="#HelloSpring" class="headerlink" title="HelloSpring"></a>HelloSpring</h1><ul><li>beans.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;Hello&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.ma.Hello&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;message&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Hello World!&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>实体类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ma;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/10 14:43</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Hello</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String message;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getMessage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> message;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMessage</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;message:&quot;</span> + message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>测试类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ma;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/10 14:44</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainApp</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;beans.xml&quot;</span>);</span><br><span class="line">        <span class="comment">// 对象都由spring进行管理，所以需要用getBean方法来获取对象</span></span><br><span class="line">        Hello obj = (Hello) context.getBean(<span class="string">&quot;Hello&quot;</span>);</span><br><span class="line">        obj.getMessage();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="IOC创建对象方式"><a href="#IOC创建对象方式" class="headerlink" title="IOC创建对象方式"></a>IOC创建对象方式</h1><ul><li>set注入<ul><li>使用set注入必须<strong>为属性提供set方法</strong>，spring容器就是通过调用bean的set方法为属性注入值。</li><li>在xml中通过<strong>property标签</strong>使用set注入</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ma.dao;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/15 19:21</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 提供set方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;name=&quot;</span>+name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 通过setter注入 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;User&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.ma.dao.User&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;李四&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>property中的name属性是将setter方法名的set去掉然后小写第一个字母，例如：setAge—&gt;age</p><p>基本数据类型用value注入</p><p>引用类型用ref注入</p></blockquote><ul><li>构造器注入<ul><li>使用构造器注入就要为类提供构造方法</li><li>在xml中通过constructor-arg标签使用构造器注入</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ma.dao;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/15 19:21</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;name=&quot;</span>+name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 匹配构造器参数名称 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;User&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.ma.dao.User&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;李四&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 匹配构造器的参数下标 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;User&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.ma.dao.User&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;0&quot;</span> <span class="attr">value</span>=<span class="string">&quot;李四&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 匹配构造器的参数类型 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;User&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.ma.dao.User&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">type</span>=<span class="string">&quot;java.lang.String&quot;</span> <span class="attr">value</span>=<span class="string">&quot;李四&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>工厂模式</li></ul><h1 id="Spring配置"><a href="#Spring配置" class="headerlink" title="Spring配置"></a>Spring配置</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 用于描述、、、没什么用 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 别名、、、给对象起个别名 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">alias</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">alias</span>=<span class="string">&quot;userName&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">id: bean的唯一标识符，相当于对象名</span></span><br><span class="line"><span class="comment">class: bean对象所对应的全限定名，包名+类名</span></span><br><span class="line"><span class="comment">name: 也是别名，而且可以同时取多个别名</span></span><br><span class="line"><span class="comment">scpoe: 作用域</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.X.X.Xxx&quot;</span> <span class="attr">name</span>=<span class="string">&quot;user1 user2,u3;u4 &quot;</span> <span class="attr">scope</span>=<span class="string">&quot;&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- import 一般用于团队开发 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 将多个配置文件导入合并为一个 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">&quot;beanX.xml&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">&quot;beanY.xml&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">当调用主配置有重名的时候，会自动选择一个配置用</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:annotation-config</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="依赖注入"><a href="#依赖注入" class="headerlink" title="依赖注入"></a>依赖注入</h1><ul><li>构造器注入</li></ul><ul><li>set注入<ul><li>依赖于容器</li><li>由容器来注入</li></ul></li></ul><blockquote><p>测试环境：</p><ul><li>常用数据类型的注入</li><li>引用数据类型的注入</li><li>数组类型的注入</li><li>list的注入</li><li>set的注入</li><li>map的注入</li><li>空值的注入</li><li>Properties的注入</li></ul></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ma.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/15 19:53</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Address address;</span><br><span class="line">    <span class="keyword">private</span> String[] books;</span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; hobbys;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String, String&gt; cards;</span><br><span class="line">    <span class="keyword">private</span> Set&lt;String&gt; games;</span><br><span class="line">    <span class="keyword">private</span> String wife;</span><br><span class="line">    <span class="keyword">private</span> Properties info;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Address <span class="title">getAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAddress</span><span class="params">(Address address)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.address = address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String[] getBooks() &#123;</span><br><span class="line">        <span class="keyword">return</span> books;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBooks</span><span class="params">(String[] books)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.books = books;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;String&gt; <span class="title">getHobbys</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> hobbys;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHobbys</span><span class="params">(List&lt;String&gt; hobbys)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.hobbys = hobbys;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map&lt;String, String&gt; <span class="title">getCards</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> cards;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCards</span><span class="params">(Map&lt;String, String&gt; cards)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.cards = cards;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Set&lt;String&gt; <span class="title">getGames</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> games;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setGames</span><span class="params">(Set&lt;String&gt; games)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.games = games;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getWife</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> wife;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setWife</span><span class="params">(String wife)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.wife = wife;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Properties <span class="title">getInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> info;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setInfo</span><span class="params">(Properties info)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.info = info;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, address=&quot;</span> + address +</span><br><span class="line">                <span class="string">&quot;, books=&quot;</span> + Arrays.toString(books) +</span><br><span class="line">                <span class="string">&quot;, hobbys=&quot;</span> + hobbys +</span><br><span class="line">                <span class="string">&quot;, cards=&quot;</span> + cards +</span><br><span class="line">                <span class="string">&quot;, games=&quot;</span> + games +</span><br><span class="line">                <span class="string">&quot;, wife=&#x27;&quot;</span> + wife + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, info=&quot;</span> + info +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ma.pojo;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/15 19:54</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Address</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAddress</span><span class="params">(String address)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.address = address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Address&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;address=&#x27;&quot;</span> + address + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;address&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.ma.pojo.Address&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;address&quot;</span> <span class="attr">value</span>=<span class="string">&quot;山东&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.ma.pojo.Student&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 普通值注入，value --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;李四&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- Bean注入 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;address&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;address&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 数组注入 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;books&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>红楼梦<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>西游记<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>三国演义<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- list注入 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;hobbys&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>编程<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>编程1<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>编程2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>编程3<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- map注入 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;cards&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">map</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;1&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123123&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;2&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123123&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;3&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123123&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;4&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123123&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- set注入 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;games&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>warframe<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>csgo<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>pubg<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 空值注入 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;wife&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">null</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- Properties注入 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;1&quot;</span>&gt;</span>1231231@qq.com<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>其它注入<ul><li>p空间注入</li><li>c空间注入</li></ul></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- p命名空间 --&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       </span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">&quot;http://www.springframework.org/schema/p&quot;</span></span></span><br><span class="line"><span class="tag">       </span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- p:property --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.ma.pojo.PUser&quot;</span> <span class="attr">p:name</span>=<span class="string">&quot;王五&quot;</span> <span class="attr">p:age</span>=<span class="string">&quot;20&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- p命名空间 --&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       </span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:c</span>=<span class="string">&quot;http://www.springframework.org/schema/c&quot;</span></span></span><br><span class="line"><span class="tag">       </span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;teacher&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.ma.pojo.CTeacher&quot;</span>  <span class="attr">c:name</span>=<span class="string">&quot;张三&quot;</span> <span class="attr">c:age</span>=<span class="string">&quot;18&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="Bean的作用域"><a href="#Bean的作用域" class="headerlink" title="Bean的作用域"></a>Bean的作用域</h1><table><thead><tr><th>作用域</th><th>描述</th></tr></thead><tbody><tr><td>singleton</td><td>单例作用域,每个Spring IoC容器创建单个实例。单例模式</td></tr><tr><td>prototype</td><td>多例作用域，为每个请求创建一个新的bean实例。原型模式</td></tr><tr><td>request</td><td>单个HTTP请求的生命周期。每个HTTP请求都有自己的bean实例</td></tr><tr><td>session</td><td>HTTPSession的生命周期。仅在可感知web的Spring应用程序上下文中有效。</td></tr><tr><td>application</td><td>ServletContext的生命周期。仅在可感知web的Spring应用程序上下文中有效。</td></tr><tr><td>websocket</td><td>websocket的生命周期。仅在可感知web的Spring应用程序上下文中有效。</td></tr></tbody></table><h1 id="Bean的自动装配"><a href="#Bean的自动装配" class="headerlink" title="Bean的自动装配"></a>Bean的自动装配</h1><ul><li>自动装配是满足bean依赖的一种方式</li><li>Spring会在上下文中自动寻找bean并装配属性</li></ul><p>三种装配方式</p><ul><li>xml中显式的装配</li><li>隐式的自动装配</li><li>在Java中显式配置</li></ul><h2 id="byName自动装配"><a href="#byName自动装配" class="headerlink" title="byName自动装配"></a>byName自动装配</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;cat&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.ma.pojo.Cat&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dog&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.ma.pojo.Dog&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment"> byName:会自动在容器上下文中查找和自己对象set方法后面的值对应的bean的id</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;person&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.ma.pojo.Person&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byName&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;李四&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="byType自动装配"><a href="#byType自动装配" class="headerlink" title="byType自动装配"></a>byType自动装配</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;cat&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.ma.pojo.Cat&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dog&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.ma.pojo.Dog&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment"> byType:会自动在容器上下文中查找和自己对象属性类型相同的bean对应的bean</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;person&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.ma.pojo.Person&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byName&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;李四&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>总结：</p><ul><li>byName的时候，需要保证所有的bean的id唯一并且这个bean需要和自动注入的属性的set方法的值一致</li><li>byType的时候，需要保证所有的bean的class唯一并且这个bean需要和自动注入的属性的类型一致</li></ul></blockquote><h2 id="使用注解自动装配"><a href="#使用注解自动装配" class="headerlink" title="使用注解自动装配"></a>使用注解自动装配</h2><p>要使用注解：</p><ul><li>导入约束</li><li>配置注解的支持</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       </span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">       </span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">       </span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/aop/spring-aop.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 注解驱动 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:annotation-config</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ma.pojo;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/16 8:17</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Cat</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">voice</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;喵&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.ma.pojo;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/16 8:17</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Cat</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">voice</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;喵&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.ma.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/16 8:17</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> Cat cat;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Dog dog;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Cat <span class="title">getCat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> cat;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 并无SetCat方法，但依然可以注入</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Dog <span class="title">getDog</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dog;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDog</span><span class="params">(Dog dog)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.dog = dog;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Person&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;cat=&quot;</span> + cat +</span><br><span class="line">                <span class="string">&quot;, dog=&quot;</span> + dog +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.ma.pojo.Person;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/16 15:06</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;applicationContext.xml&quot;</span>);</span><br><span class="line">        Person person = context.getBean(<span class="string">&quot;person&quot;</span>, Person.class);</span><br><span class="line">        person.getCat().voice();</span><br><span class="line">        person.getDog().voice();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Autowired"><a href="#Autowired" class="headerlink" title="@Autowired"></a>@Autowired</h3><p>直接在属性上使用，也可以在set方法上使用</p><p>使用@Autowired 我们可以不用编写Set方法，前提是这个自动装配的属性存在于Spring容器，且符合byName规则</p><blockquote><p>如果使用@Autowired自动装配的环境比较复杂，自动装配无法通过一个注解（@Autowired）完成的时候，可以使用@Qualifier(value=”xxx”)去配合@Autowired使用，指定一个唯一的bean对象注入</p></blockquote><h3 id="Resource"><a href="#Resource" class="headerlink" title="@Resource"></a>@Resource</h3><p>先通过id去查找，若找不到在通过类型去找。</p><ul><li>先导入依赖</li><li>再导入@Resource所需要的包</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.annotation<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.annotation-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br></pre></td></tr></table></figure><blockquote><p>总结：</p><p>@Resource和@Autowired区别</p><ul><li>都是用来自动装配的，都可以放到属性字段上</li><li>@Autowired通过byType的方式实现</li><li>@Resource默认通过byname的方式实现，如果找不到名字，则通过btType实现,若两个找不到则报错</li></ul></blockquote><h1 id="使用注解开发"><a href="#使用注解开发" class="headerlink" title="使用注解开发"></a>使用注解开发</h1><p>在spring4.0之后的开发必须要保证导入aop的包</p><p>使用注解需要导入 context约束，增加注解的支持</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag"></span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/aop/spring-aop.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 指定扫描的包，这个包下的注解就会生效 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.ma&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 注解驱动 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:annotation-config</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ma.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Scope;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/16 9:25</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// @Component 等价于 &lt;bean id=&quot;user&quot; class=&quot;com.ma.pojo.User&quot; /&gt;</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Scope(&quot;prototype&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Value 相当于 &lt;property name=&quot;name&quot; value=&quot;王五&quot; /&gt;</span></span><br><span class="line">    <span class="meta">@Value(&quot;李四&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;17&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.ma.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/16 9:26</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;applicationContext.xml&quot;</span>);</span><br><span class="line"></span><br><span class="line">        User user = context.getBean(<span class="string">&quot;user&quot;</span>, User.class);</span><br><span class="line">        System.out.println(user.name);</span><br><span class="line">        System.out.println(user.age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Component衍生注解"><a href="#Component衍生注解" class="headerlink" title="@Component衍生注解"></a>@Component衍生注解</h2><p>在Web开发中会按照mvc三层架构分层</p><ul><li>dao<ul><li>@Repository</li></ul></li><li>service<ul><li>@Service</li></ul></li><li>controller<ul><li>@Controller</li></ul></li></ul><blockquote><p>这四个注解的功能一样，都是将某个类注册到Spring中，装配</p></blockquote><blockquote><p>总结：</p><p>xml与注解</p><ul><li>xml比较万能、灵活，适用于任何场合、维护方便</li><li>注解、维护相对复杂</li></ul><p>xml用来管理bean</p><p>注解只负责完成属性的注入</p><p><strong>要开启注解支持，注解才能生效</strong></p></blockquote><h1 id="使用Java的方式配置Spring"><a href="#使用Java的方式配置Spring" class="headerlink" title="使用Java的方式配置Spring"></a>使用Java的方式配置Spring</h1><p>不使用Spring的xml配置，完全交给Java做</p><p>JavaConfig是Spring的一个子项目，4.0之后成为了一个核心功能</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ma.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/16 17:17</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;李四&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ma.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ma.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/16 17:19</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Configuration代表一个配置类。相当于applicationContext.xml</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 注册一个bean</span></span><br><span class="line">    <span class="comment">// 方法名相当于id</span></span><br><span class="line">    <span class="comment">// 方法的返回值相当于class</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">getUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> User();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.ma.config.MyConfig;</span><br><span class="line"><span class="keyword">import</span> com.ma.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.AnnotationConfigApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/16 17:22</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 如果完全使用了配置类方式去做，只能通过AnnotationConfig上下文获取容器，通过配置类的class对象加载</span></span><br><span class="line">        ApplicationContext context = <span class="keyword">new</span> AnnotationConfigApplicationContext(MyConfig.class);</span><br><span class="line"></span><br><span class="line">        User user = (User) context.getBean(<span class="string">&quot;getUser&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(user.getName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="代理模式"><a href="#代理模式" class="headerlink" title="代理模式"></a>代理模式</h1><p>不改变原有的业务，还想要扩展业务，可以用代理模式</p><p>好处：</p><ul><li>可以使真实角色的操作更加纯粹，不用关注一些公共的业务</li><li>公共业务交给代理角色</li><li>公共业务发生扩展的时候，方便集中管理</li><li>一个动态代理类代理的是一个接口，一般就是对应一类业务</li></ul><p>缺点：</p><ul><li>一个真实角色就要产生一个代理角色，代码量翻倍 </li></ul><h2 id="静态代理模式"><a href="#静态代理模式" class="headerlink" title="静态代理模式"></a>静态代理模式</h2><ul><li>抽象类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ma.demo02;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/16 20:42</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">select</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>被代理类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ma.demo02;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/16 20:43</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;增加了用户&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;删除了用户&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">select</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;查询了用户&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;改变了用户&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>代理类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ma.demo02;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/16 20:48</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceProxy</span> <span class="keyword">implements</span> <span class="title">UserService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    UserServiceImpl userService;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserService</span><span class="params">(UserServiceImpl userService)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userService = userService;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        message(<span class="string">&quot;add&quot;</span>);</span><br><span class="line">        userService.add();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        message(<span class="string">&quot;delete&quot;</span>);</span><br><span class="line">        userService.delete();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        message(<span class="string">&quot;update&quot;</span>);</span><br><span class="line">        userService.update();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">select</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        message(<span class="string">&quot;select&quot;</span>);</span><br><span class="line">        userService.select();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">message</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;使用了&quot;</span>+message+<span class="string">&quot;方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>实现类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ma.demo02;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/16 20:46</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Client</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        UserServiceImpl userService = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">        UserServiceProxy userServiceProxy = <span class="keyword">new</span> UserServiceProxy();</span><br><span class="line"></span><br><span class="line">        userServiceProxy.setUserService(userService);</span><br><span class="line"></span><br><span class="line">        userServiceProxy.select();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="动态代理模式"><a href="#动态代理模式" class="headerlink" title="动态代理模式"></a>动态代理模式</h2><ul><li>动态代理和静态代理角色一样</li><li>动态代理的代理类是动态生成的</li></ul><ul><li>抽象类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ma.demo03;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/17 10:03</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Rent</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rent</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>被代理类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ma.demo03;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/17 10:02</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Host</span> <span class="keyword">implements</span> <span class="title">Rent</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;房东要出租房子&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>动态代理类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ma.demo04;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/17 10:04</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 自动生成代理类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProxyInvocationHandler</span> <span class="keyword">implements</span> <span class="title">InvocationHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 被代理的接口</span></span><br><span class="line">    <span class="keyword">private</span> Object target;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTarget</span><span class="params">(Object target)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.target = target;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成代理类</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">getProxy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Proxy.newProxyInstance(<span class="keyword">this</span>.getClass().getClassLoader(), target.getClass().getInterfaces(), <span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 处理代理实例，并返回结果</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 动态代理的实现，本质是使用反射</span></span><br><span class="line">        Object result = method.invoke(target, args);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>实现类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ma.demo03;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/17 10:20</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Client</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Host host = <span class="keyword">new</span> Host();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 代理角色</span></span><br><span class="line">        ProxyInvocationHandler pih = <span class="keyword">new</span> ProxyInvocationHandler();</span><br><span class="line">        pih.setRent(host);</span><br><span class="line"></span><br><span class="line">        Rent proxy = (Rent) pih.getProxy();</span><br><span class="line"></span><br><span class="line">        proxy.rent();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="AOP"><a href="#AOP" class="headerlink" title="AOP"></a>AOP</h1><h2 id="使用Spring实现AOP"><a href="#使用Spring实现AOP" class="headerlink" title="使用Spring实现AOP"></a>使用Spring实现AOP</h2><p>需导入一个依赖包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="使用Spring的API接口"><a href="#使用Spring的API接口" class="headerlink" title="使用Spring的API接口"></a>使用Spring的API接口</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ma.service;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/17 11:10</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">query</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ma.service;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/17 11:11</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;增加了一个用户&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;删除了一个用户&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;更改了一个用户&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">query</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;查询了一个用户&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ma.log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.aop.MethodBeforeAdvice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/17 11:16</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BeforeLog</span> <span class="keyword">implements</span> <span class="title">MethodBeforeAdvice</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// method：要执行的目标对象的方法</span></span><br><span class="line">    <span class="comment">// Objects：参数</span></span><br><span class="line">    <span class="comment">// o：目标对象</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">(Method method, Object[] objects, Object o)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        System.out.println(o.getClass().getName()+<span class="string">&quot;的&quot;</span>+method.getName()+<span class="string">&quot;被执行了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.ma.log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.aop.AfterReturningAdvice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/17 11:22</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AfterLog</span> <span class="keyword">implements</span> <span class="title">AfterReturningAdvice</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterReturning</span><span class="params">(Object o, Method method, Object[] objects, Object o1)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;执行了&quot;</span>+method.getName()+ <span class="string">&quot;返回结果为：&quot;</span>+o);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag"></span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/aop/spring-aop.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.ma.service.UserServiceImpl&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;afterLog&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.ma.log.AfterLog&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;beforeLog&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.ma.log.BeforeLog&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 使用原生springAPI接口 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置aop需要导入aop的约束 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 切入点 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;pointcut&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* com.ma.service.UserServiceImpl.*(..))&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">&quot;afterLog&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;pointcut&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">&quot;beforeLog&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;pointcut&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span>  <span class="attr">proxy-target-class</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="通过自定义来实现AOP"><a href="#通过自定义来实现AOP" class="headerlink" title="通过自定义来实现AOP"></a>通过自定义来实现AOP</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ma.service;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/17 11:10</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">query</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ma.service;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/17 11:11</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;增加了一个用户&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;删除了一个用户&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;更改了一个用户&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">query</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;查询了一个用户&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ma.diy;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/17 13:48</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DiyPointCut</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;方法执行前&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;方法执行后&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag"></span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/aop/spring-aop.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.ma.service.UserServiceImpl&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;afterLog&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.ma.log.AfterLog&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;beforeLog&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.ma.log.BeforeLog&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 自定义类 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;diy&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.ma.diy.DiyPointCut&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">ref</span>=<span class="string">&quot;diy&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 切入点 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;point&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* com.ma.service.UserServiceImpl.*(..))&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">aop:after</span> <span class="attr">method</span>=<span class="string">&quot;after&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;point&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">aop:before</span> <span class="attr">method</span>=<span class="string">&quot;before&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;point&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="使用注解实现"><a href="#使用注解实现" class="headerlink" title="使用注解实现"></a>使用注解实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ma.service;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/17 11:10</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">query</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ma.diy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Aspect;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Before;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/17 14:11</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Aspect</span>     <span class="comment">// 标注这个类是一个切面</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AnnotationPointCut</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before(&quot;execution(* com.ma.service.UserServiceImpl.*(..))&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;注解方法执行前&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ma.service;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/17 11:11</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;增加了一个用户&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;删除了一个用户&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;更改了一个用户&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">query</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;查询了一个用户&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag"></span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/aop/spring-aop.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.ma.service.UserServiceImpl&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;afterLog&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.ma.log.AfterLog&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;beforeLog&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.ma.log.BeforeLog&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 注解实现AOP --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;annotationPointCut&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.ma.diy.AnnotationPointCut&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 开启注解支持     JDK默认 proxy-target-class=&quot;false&quot; true是cglib --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="整合Mybatis"><a href="#整合Mybatis" class="headerlink" title="整合Mybatis"></a>整合Mybatis</h1><ul><li>导入jar包<ul><li>junit</li><li>mybatis</li><li>mysql数据库</li><li>spring相关</li><li>aop织入</li><li>mybatis-spring</li></ul></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.20<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>编写配置文件</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DriverManagerDataSource&quot;</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/mybatis?useSSL=false<span class="symbol">&amp;amp;</span>serverTimezone=UTC&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- sqlSessionFactory --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSessionFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;configLocation&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:mybatis-config.xml&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;mapperLocations&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:com/ma/mapper/UserMapper.xml&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSessionTemplate&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionTemplate&quot;</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;0&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;sqlSessionFactory&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userMapper&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.ma.mapper.UserMapperImpl&quot;</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sqlSessionTemplate&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;sqlSessionTemplate&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.ma.dao&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ma.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/17 17:11</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String age;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ma.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ma.dao.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/17 17:01</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">selectUser</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span><br><span class="line">&lt;!DOCTYPE mapper</span><br><span class="line">        PUBLIC <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span><br><span class="line">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span><br><span class="line">&lt;mapper namespace=<span class="string">&quot;com.ma.mapper.UserMapper&quot;</span>&gt;</span><br><span class="line">    &lt;select id=<span class="string">&quot;selectUser&quot;</span> resultType=<span class="string">&quot;com.ma.dao.User&quot;</span>&gt;</span><br><span class="line">        select * from mybatis.user</span><br><span class="line">    &lt;/select&gt;</span><br><span class="line">&lt;/mapper&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ma.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ma.dao.User;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.spring.SqlSessionTemplate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/17 17:01</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperImpl</span> <span class="keyword">implements</span> <span class="title">UserMapper</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> SqlSessionTemplate sqlSessionTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSqlSessionTemplate</span><span class="params">(SqlSessionTemplate sqlSessionTemplate)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.sqlSessionTemplate = sqlSessionTemplate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">selectUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        UserMapper mapper = sqlSessionTemplate.getMapper(UserMapper.class);</span><br><span class="line">        <span class="keyword">return</span> mapper.selectUser();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>测试类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.ma.dao.User;</span><br><span class="line"><span class="keyword">import</span> com.ma.mapper.UserMapper;</span><br><span class="line"><span class="keyword">import</span> com.ma.mapper.UserMapperImpl;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/17 17:21</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;spring-dao.xml&quot;</span>);</span><br><span class="line"></span><br><span class="line">        UserMapper userMapper = context.getBean(<span class="string">&quot;userMapper&quot;</span>, UserMapper.class);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (User user : userMapper.selectUser()) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis</title>
      <link href="/posts/da3e1361/"/>
      <url>/posts/da3e1361/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><h2 id="MyBatis介绍"><a href="#MyBatis介绍" class="headerlink" title="MyBatis介绍"></a>MyBatis介绍</h2><ul><li>优秀的持久层框架</li><li>对操作数据库过程进行封装，只关注Sql，不用费力去处理代码</li><li>通过xml或注解的方式将要执行的各种statement配置起来，映射生成最终的执行sql语句，MyBatis将结果映射成Java对象返回</li><li>MyBatis不将Java对象与数据库表关联起来，将Java方法与SQL语句关联</li><li>MyBatis允许用户充分利用数据库的各种功能</li></ul><h2 id="JDBC存在的问题"><a href="#JDBC存在的问题" class="headerlink" title="JDBC存在的问题"></a>JDBC存在的问题</h2><ul><li><p>数据库的连接创建、释放频繁造成系统资源浪费，使用数据库连接池可解决</p><ul><li>数据库连接池：负责分配、管理和释放数据库连接，允许应用程序<strong>重复使用</strong>一个现有的数据库连接，而不是再重新建立一个</li></ul></li><li><p>SQL语句在代码中硬编码，代码维护不易，在应用中Sql变化大，一旦变动就要修改代码</p><ul><li>硬编码是将数据直接嵌入到源代码中，只能通过<strong>编辑源代码</strong>和<strong>重新编译可执行文件</strong>来修改</li></ul></li><li><p>使用preparedStatement时，占位符？可能接收硬编码，当条件子句不一定时，占位符可多可少。改完sql要改代码，维护不易</p></li></ul><ul><li>对结果集解析存在硬编码，将数据库记录封装成pojo对象解析方便</li></ul><blockquote><p>上面的问题借助DBUtils或Spring中自带的数据库操作框架JdbcTemplate,解决<strong>一定程度的问题</strong></p><p>真正解决问题的是：</p><ul><li>Jpa</li><li>MyBatis</li></ul></blockquote><h1 id="第一个程序"><a href="#第一个程序" class="headerlink" title="第一个程序"></a>第一个程序</h1><h2 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database `test01`;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h2 id="创建普通maven工程"><a href="#创建普通maven工程" class="headerlink" title="创建普通maven工程"></a>创建普通maven工程</h2><ul><li>file-new-project</li><li>选择maven</li><li>一直下一步即可</li></ul><h2 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.20<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 解决maven资源过滤问题 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="构建父工程"><a href="#构建父工程" class="headerlink" title="构建父工程"></a>构建父工程</h2><ul><li>将src目录删除</li><li>选择父项目(刚才创建的项目)</li><li>右击-new-module</li><li>选择maven项目</li></ul><h2 id="构建核心配置文件"><a href="#构建核心配置文件" class="headerlink" title="构建核心配置文件"></a>构建核心配置文件</h2><ul><li>在resources文件夹下右击</li><li>选择file</li><li>输入mybatis-config.xml</li><li>粘贴以下代码</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">  <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">  <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/?useSSL=false<span class="symbol">&amp;amp;</span>serverTimezone=UTC&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">  <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 改为映射文件XxxMapper.xml所在的路径 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;org/mybatis/example/BlogMapper.xml&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="构建SqlSessionFactory"><a href="#构建SqlSessionFactory" class="headerlink" title="构建SqlSessionFactory"></a>构建SqlSessionFactory</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kuang.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/5 14:20</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Utils</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 提升作用域</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SqlSessionFactory sqlSessionFactory;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 获取SqlSessionFactory对象</span></span><br><span class="line">            String resource = <span class="string">&quot;mybatis-config.xml&quot;</span>;</span><br><span class="line">            InputStream inputStream = Resources.getResourceAsStream(resource);</span><br><span class="line">            sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title">getSqlSession</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sqlSessionFactory.openSession();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="编写实体类"><a href="#编写实体类" class="headerlink" title="编写实体类"></a>编写实体类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kuang.pojo;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/5 11:25</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"><span class="comment">// 属性</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 构造方法</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Getter方法 Setter方法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="编写持久层"><a href="#编写持久层" class="headerlink" title="编写持久层"></a>编写持久层</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kuang.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.kuang.pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/5 11:27</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">getUserList</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="编写映射文件XxxMapper-xml"><a href="#编写映射文件XxxMapper-xml" class="headerlink" title="编写映射文件XxxMapper.xml"></a>编写映射文件XxxMapper.xml</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 绑定一个mapper接口 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.kuang.dao.UserMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- id填写持久层的方法名 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 返回结果集路径是持久层 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserList&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.kuang.pojo.User&quot;</span>&gt;</span></span><br><span class="line">        select * from ... ;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>快捷方法：</p><ul><li>在接口中右击</li><li>选择goto</li><li>选择test</li><li>点击create new test</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kuang.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> junit.framework.TestCase;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/5 15:15</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperTest</span> <span class="keyword">extends</span> <span class="title">TestCase</span> </span>&#123;</span><br><span class="line">    SqlSession sqlSession = DBUtils.getSqlSession();</span><br><span class="line"></span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper.class);</span><br><span class="line"></span><br><span class="line">    List&lt;User&gt; userList = userMapper.getUserList();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 获取数据</span></span><br><span class="line">    </span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：</p><ul><li>xml文件里不要有中文注释</li></ul></blockquote><h2 id="部分错误总结"><a href="#部分错误总结" class="headerlink" title="部分错误总结"></a>部分错误总结</h2><ul><li>搭建环境时<ul><li>若提示出现中文乱码，在设置中设置编码为utf-8,或者将所有xml文件中的注释删除</li><li>空指针异常，查看工具类是否创建了空对象</li></ul></li><li>测试时<ul><li>持久层接口里的方法名和映射文件里的id要对应</li><li>编写测试类的时候，不要忘记注解@Test</li><li>且测试类名尽量以TestXxx的形式</li></ul></li></ul><h1 id="CRUD的完善"><a href="#CRUD的完善" class="headerlink" title="CRUD的完善"></a>CRUD的完善</h1><h2 id="增"><a href="#增" class="headerlink" title="增"></a>增</h2><h4 id="XxxMapper-xml"><a href="#XxxMapper-xml" class="headerlink" title="XxxMapper.xml"></a>XxxMapper.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertStudent&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.ma.pojo.Student&quot;</span>&gt;</span></span><br><span class="line">    insert into student (id,name,sex,number,address)</span><br><span class="line">    values (#&#123;id&#125;,#&#123;name&#125;,#&#123;sex&#125;,#&#123;number&#125;,#&#123;address&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="XxxMapper-java"><a href="#XxxMapper-java" class="headerlink" title="XxxMapper.java"></a>XxxMapper.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">insertStudent</span><span class="params">(Student student)</span></span>;</span><br></pre></td></tr></table></figure><h4 id="Test测试"><a href="#Test测试" class="headerlink" title="Test测试"></a>Test测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testInsertStudent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    SqlSession sqlSession = MapperUtils.getSqlSession();</span><br><span class="line">    StudentMapper studentMapper = sqlSession.getMapper(StudentMapper.class);</span><br><span class="line"></span><br><span class="line">    studentMapper.insertStudent(<span class="keyword">new</span> Student(<span class="number">7</span>,<span class="string">&quot;李文博&quot;</span>, <span class="string">&quot;男&quot;</span>, <span class="string">&quot;12037281909&quot;</span>, <span class="string">&quot;湖南省&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 提交事务</span></span><br><span class="line">    sqlSession.commit();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 关闭资源</span></span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="查"><a href="#查" class="headerlink" title="查"></a>查</h2><h4 id="XxxMapper-xml-1"><a href="#XxxMapper-xml-1" class="headerlink" title="XxxMapper.xml"></a>XxxMapper.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectAllStudent&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.ma.pojo.Student&quot;</span>&gt;</span></span><br><span class="line">    select * from student</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectStudentById&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.ma.pojo.Student&quot;</span>&gt;</span></span><br><span class="line">    select * from student where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="XxxMapper-java-1"><a href="#XxxMapper-java-1" class="headerlink" title="XxxMapper.java"></a>XxxMapper.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">List&lt;Student&gt; <span class="title">selectAllStudent</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function">Student <span class="title">selectStudentById</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br></pre></td></tr></table></figure><h4 id="Test测试-1"><a href="#Test测试-1" class="headerlink" title="Test测试"></a>Test测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSelectAllStudent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    SqlSession sqlSession  = MapperUtils.getSqlSession();</span><br><span class="line">    StudentMapper studentMapper = sqlSession.getMapper(StudentMapper.class);</span><br><span class="line"></span><br><span class="line">    List&lt;Student&gt; studentLists = studentMapper.selectAllStudent();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (Student studentList : studentLists) &#123;</span><br><span class="line">        System.out.println(studentList);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSelectStudentById</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    SqlSession sqlSession  = MapperUtils.getSqlSession();</span><br><span class="line">    StudentMapper studentMapper = sqlSession.getMapper(StudentMapper.class);</span><br><span class="line"></span><br><span class="line">    Student student = studentMapper.selectStudentById(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    System.out.println(student);</span><br><span class="line"></span><br><span class="line">    sqlSession.close();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="改"><a href="#改" class="headerlink" title="改"></a>改</h2><h4 id="XxxMapper-xml-2"><a href="#XxxMapper-xml-2" class="headerlink" title="XxxMapper.xml"></a>XxxMapper.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateStudent&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.ma.pojo.Student&quot;</span>&gt;</span></span><br><span class="line">    update student set</span><br><span class="line">    name = #&#123;name&#125;,</span><br><span class="line">    sex = #&#123;sex&#125;,</span><br><span class="line">    number = #&#123;number&#125;,</span><br><span class="line">    address = #&#123;address&#125;</span><br><span class="line">    where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="XxxMapper-java-2"><a href="#XxxMapper-java-2" class="headerlink" title="XxxMapper.java"></a>XxxMapper.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">updateStudent</span><span class="params">(Student student)</span></span>;</span><br></pre></td></tr></table></figure><h4 id="Test测试-2"><a href="#Test测试-2" class="headerlink" title="Test测试"></a>Test测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpdateStudent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SqlSession sqlSession = MapperUtils.getSqlSession();</span><br><span class="line">        StudentMapper studentMapper = sqlSession.getMapper(StudentMapper.class);</span><br><span class="line"></span><br><span class="line">        studentMapper.updateStudent(<span class="keyword">new</span> Student(<span class="number">7</span>, <span class="string">&quot;王明&quot;</span>, <span class="string">&quot;女&quot;</span>, <span class="string">&quot;18393048087&quot;</span>, <span class="string">&quot;浙江省&quot;</span>));</span><br><span class="line"></span><br><span class="line">        sqlSession.commit();</span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="核心配置文件"><a href="#核心配置文件" class="headerlink" title="核心配置文件"></a>核心配置文件</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/stumsg?useSSL=false<span class="symbol">&amp;amp;</span>serverTimezone=UTC&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 改为映射文件XxxMapper.xml所在的路径 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/ma/Mapper/StudentMapper.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="Mybatis逆向工程"><a href="#Mybatis逆向工程" class="headerlink" title="Mybatis逆向工程"></a>Mybatis逆向工程</h1><h2 id="创建普通maven项目"><a href="#创建普通maven项目" class="headerlink" title="创建普通maven项目"></a>创建普通maven项目</h2><ul><li>file-new-project</li><li>选择maven</li><li>一直下一步即可</li></ul><h2 id="导入jar包"><a href="#导入jar包" class="headerlink" title="导入jar包"></a>导入jar包</h2><ul><li>右键项目名称</li><li>选择Open Module Settings</li><li>点击dependencies</li><li>点击+</li><li>选择JARs or…</li><li>导入mybatis-generator-core.1.4.0.jar<ul><li>jar包下载地址：<a href="https://github.com/mybatis/generator/releases/tag/mybatis-generator-1.4.0">https://github.com/mybatis/generator/releases/tag/mybatis-generator-1.4.0</a></li></ul></li></ul><h2 id="导入依赖"><a href="#导入依赖" class="headerlink" title="导入依赖"></a>导入依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="构建配置文件"><a href="#构建配置文件" class="headerlink" title="构建配置文件"></a>构建配置文件</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">generatorConfiguration</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;</span> <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">generatorConfiguration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context</span> <span class="attr">id</span>=<span class="string">&quot;DB2Tables&quot;</span> <span class="attr">targetRuntime</span>=<span class="string">&quot;MyBatis3&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 是否去除自动生成的注释 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suppressAllComments&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Mysql数据库连接的信息：驱动类、连接地址、用户名、密码 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">jdbcConnection</span> <span class="attr">driverClass</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">connectionURL</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/stumsg?useSSL=false<span class="symbol">&amp;amp;</span>serverTimezone=UTC&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">userId</span>=<span class="string">&quot;root&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">password</span>=<span class="string">&quot;123456&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 默认为false，把JDBC DECIMAL 和NUMERIC类型解析为Integer，为true时 把JDBC DECIMAL 和NUMERIC类型解析为java.math.BigDecimal --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaTypeResolver</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;forceBigDecimals&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaTypeResolver</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- targetProject：生成POJO类的位置 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaModelGenerator</span></span></span><br><span class="line"><span class="tag">                <span class="attr">targetPackage</span>=<span class="string">&quot;com.ma.pojo&quot;</span> <span class="attr">targetProject</span>=<span class="string">&quot;F:/MyBatisLearn/mybatis_reverse/src/main/java&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- enableSubPackages:是否让schema作为包的后缀 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;enableSubPackages&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 从数据库返回的值被清理前后的空格 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;trimStrings&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaModelGenerator</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- targetProject：mapper映射文件生成的位置 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">sqlMapGenerator</span> <span class="attr">targetPackage</span>=<span class="string">&quot;com.ma.mapper&quot;</span></span></span><br><span class="line"><span class="tag">                         <span class="attr">targetProject</span>=<span class="string">&quot;F:/MyBatisLearn/mybatis_reverse/src/main/java&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- enableSubPackages:是否让schema作为包的后缀 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;enableSubPackages&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">sqlMapGenerator</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- targetProject：mapper接口生成的的位置 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaClientGenerator</span> <span class="attr">type</span>=<span class="string">&quot;XMLMAPPER&quot;</span></span></span><br><span class="line"><span class="tag">                             <span class="attr">targetPackage</span>=<span class="string">&quot;com.ma.dao&quot;</span> <span class="attr">targetProject</span>=<span class="string">&quot;F:/MyBatisLearn/mybatis_reverse/src/main/java&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- enableSubPackages:是否让schema作为包的后缀 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;enableSubPackages&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaClientGenerator</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 指定数据表 有几个表写几个 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;数据表名&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;数据表名&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">generatorConfiguration</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意事项：</p><ul><li>targetPackage里写包名</li><li>targetProject里写生成代码所在的路径</li></ul></blockquote><h2 id="构建生成代码"><a href="#构建生成代码" class="headerlink" title="构建生成代码"></a>构建生成代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.mybatis.generator.api.MyBatisGenerator;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.generator.config.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.generator.config.xml.ConfigurationParser;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.generator.internal.DefaultShellCallback;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/10 10:53</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GeneratorSqlmap</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">generator</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        List&lt;String&gt; warnings = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">        <span class="keyword">boolean</span> overwrite = <span class="keyword">true</span>;</span><br><span class="line">        <span class="comment">// 指定配置文件</span></span><br><span class="line">        File configFile = <span class="keyword">new</span> File(<span class="string">&quot;mybatis_reverse/src/main/resources/config/genertorConfig.xml&quot;</span>);</span><br><span class="line">        ConfigurationParser cp = <span class="keyword">new</span> ConfigurationParser(warnings);</span><br><span class="line">        Configuration config = cp.parseConfiguration(configFile);</span><br><span class="line">        DefaultShellCallback callback = <span class="keyword">new</span> DefaultShellCallback(overwrite);</span><br><span class="line">        MyBatisGenerator myBatisGenerator = <span class="keyword">new</span> MyBatisGenerator(config, callback, warnings);</span><br><span class="line">        myBatisGenerator.generate(<span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 执行main方法以生成代码</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            GeneratorSqlmap generatorSqlmap = <span class="keyword">new</span> GeneratorSqlmap();</span><br><span class="line">            generatorSqlmap.generator();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="部分错误总结-1"><a href="#部分错误总结-1" class="headerlink" title="部分错误总结"></a>部分错误总结</h2><ul><li>生成代码中<ul><li>指定配置文件的路径不要写错，报系统找不到指定位置</li><li>路径用 / 分割</li></ul></li><li>配置文件中<ul><li>数据库连接的信息不要写错，用户、密码、连接地址</li><li>指定的数据表有几个写几个。数据表名也不要写错，否则生成代码虽然不报错，但不生成任何文件</li><li>targetProject里尽量写绝对路径，且用 / 分割，否则不报错，但不生成任何文件</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法</title>
      <link href="/posts/b7e144d1/"/>
      <url>/posts/b7e144d1/</url>
      
        <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>​        根据一些的问题来学习我们的算法，提高我们的思维。</p><p>​        每章节内容，为了初学者好理解，已经可能简洁。但坏处就是有些内容说的浅显，要是需深入研究，请自行百度or参考大佬的书籍</p><p>​        只涉及一部分数据结构的内容。</p><p>​        示例代码只用了Java来实现，但语言只是一种工具不是吗，算法才是灵魂，才是高尚的。</p><h1 id="1、何为算法"><a href="#1、何为算法" class="headerlink" title="1、何为算法"></a>1、何为算法</h1><p>​        <strong>算法</strong>是解决问题的思路或者是解决某一个问题的其中一个步骤，而真正解决问题的是我们的程序。</p><blockquote><p>需要注意的是：</p><p>​        我们不一定非得去学最牛最厉害的算法，最厉害的算法真的不一定是好的。学算法的目的是，在当前的问题面前，找到一种高效且耗费资源少的一种解题思路。</p></blockquote><h2 id="1-1、好算法与坏算法"><a href="#1-1、好算法与坏算法" class="headerlink" title="1.1、好算法与坏算法"></a>1.1、好算法与坏算法</h2><p>​    个人认为没有绝对好坏算法之分，只有在某个特定的条件下的好坏。</p><blockquote><p>举例：</p><p>假设，我们有一堆<strong>同等大小</strong>且未知数量的苹果，</p><p>这就涉及到下一章节的内容</p></blockquote><h1 id="2、时间复杂度和空间复杂度"><a href="#2、时间复杂度和空间复杂度" class="headerlink" title="2、时间复杂度和空间复杂度"></a>2、时间复杂度和空间复杂度</h1><h2 id="2-1-时间复杂度"><a href="#2-1-时间复杂度" class="headerlink" title="2.1 时间复杂度"></a>2.1 时间复杂度</h2><p>​        时间复杂度：简单的理解为算法执行代码的时长。</p><p>​        如今计算机计算能力非常强大，我们人类认为比较难算的算术题，在电脑上不到一秒就可以计算出来。所以我们无法确切的比较两种算法之间，到底哪一个更快。</p><p>​        所以简化为程序执行一条语句，记为一次。</p><blockquote><p>举例：求n！,假设n为100</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> result=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">100</span>; i++) &#123;</span><br><span class="line">    result*=i;</span><br><span class="line">&#125;</span><br><span class="line">System.out.printf(result);</span><br></pre></td></tr></table></figure><p>我们来统计一下上述程序的每个步骤执行的次数</p><ul><li>int result=1;     执行一次</li><li>for语句;    执行一百次花括号里的语句</li><li>System.out.printf(result);    执行一次</li></ul><p>该程序一共执行了<strong>102</strong>次。</p><h3 id="2-1-1-简化算法的执行次数"><a href="#2-1-1-简化算法的执行次数" class="headerlink" title="2.1.1 简化算法的执行次数"></a>2.1.1 简化算法的执行次数</h3><p>​        由上题可知，当n为100的时候，程序执行时间为100+2次。</p><ul><li>当n无穷大的时候，程序的执行时间变为n+2次</li><li>所以，当n无穷大的时候，n除外的两次执行时间对总体的影响微乎其微，所以我们忽略掉这两次</li><li>最后，求n!的时间复杂度为<strong>O(n)</strong></li></ul><h3 id="2-1-2-大O记法"><a href="#2-1-2-大O记法" class="headerlink" title="2.1.2 大O记法"></a>2.1.2 大O记法</h3><p>程序通过常用O()表示程序的时间复杂度，至于为什么用O表示，就跟你问我为什么用1来表示1而不是用2来表示1一样扯淡。</p><blockquote><p>格式：</p><p>​        O(执行次数)</p></blockquote><h3 id="2-1-3-简化时间复杂度的总结"><a href="#2-1-3-简化时间复杂度的总结" class="headerlink" title="2.1.3 简化时间复杂度的总结"></a>2.1.3 简化时间复杂度的总结</h3><ul><li>去掉所有的加法常数项，例如：n^2+2  简化后     n^2</li><li>保留指数最大的项，例如：n^3+n^2+n 简化后    n^3</li><li>去掉常数系数，例如：4n^2 简化后    n^2</li></ul><p>举例： 4n^3 +2n+5<br>        简化后为 <strong>n^3</strong>，记为O(n^3)</p><h2 id="空间复杂度"><a href="#空间复杂度" class="headerlink" title="空间复杂度"></a>空间复杂度</h2><p>​        算法执行过程中，所占用内存空间的大小</p><blockquote><p>举例说明：</p><ul><li>假设我们有一堆未知数量的苹果，需要用麻袋打包好，为了避免浪费，每次只分发一个麻袋，只有一个麻袋用完了之后才能用另一个麻袋，可以申请多大的麻袋<ul><li>苹果—–资源</li><li>大麻袋—–内存里的一小份空间</li><li>小麻袋—–内存里的一小份空间</li></ul></li></ul></blockquote><p>​        空间复杂度也用大O记法表示</p><h1 id="3、递归算法"><a href="#3、递归算法" class="headerlink" title="3、递归算法"></a>3、递归算法</h1><p>​        我们来学习第一个算法，递归算法。</p><p>​        啥叫递归啊，方法(函数)调用自身的过程叫做递归。你可以理解为套娃，有限的套娃。你搁这搁这隔这呢。</p><h2 id="3-1-递归的两种方式"><a href="#3-1-递归的两种方式" class="headerlink" title="3.1 递归的两种方式"></a>3.1 递归的两种方式</h2><h3 id="3-1-1-直接调用"><a href="#3-1-1-直接调用" class="headerlink" title="3.1.1 直接调用"></a>3.1.1 直接调用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Func</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Func();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-1-2间接调用"><a href="#3-1-2间接调用" class="headerlink" title="3.1.2间接调用"></a>3.1.2间接调用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Func1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Func2();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Func2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Func2();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-2-递归算法案例"><a href="#3-2-递归算法案例" class="headerlink" title="3.2 递归算法案例"></a>3.2 递归算法案例</h2><p>​        求n！</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">factorial</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(n == <span class="number">1</span> || n == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> n * factorial(n-<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = sc.nextInt();</span><br><span class="line">        System.out.printf(factorial(n));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>尝试分析：</p><p>​    n!本质就是从1一直乘到n</p><p>​    假设factorial函数中的参数n为3</p><ul><li><p>执行factorial(3)</p></li><li><p>当n为3时，不等于0或1，执行 return 3*factorial(3-1)         因为factorial(2)未知   </p><ul><li>此时执行factorial(2)</li><li>当n为2时，不等于0或1，执行 return 2*factorial(1)         因为factorial(1)未知   <ul><li>此时执行factorial(1)</li><li>当n为1时，等于1，执行 return 1</li></ul></li><li>此时factorial(1)已知，执行完return 2*1</li></ul></li><li><p>此时factorial(2)已知，执行 return 3*2；</p></li></ul><p>所以，factorial(3)的值为6</p></blockquote><h2 id="3-3-递归的底层实现"><a href="#3-3-递归的底层实现" class="headerlink" title="3.3 递归的底层实现"></a>3.3 递归的底层实现</h2><p>​        递归函数执行时，调用者会将执行代码的权利交给被调用者，与此同时还可能会向被调者传输一些数据，然后调用者暂停运行，直至被调用者完成任务，将执行代码的权利还给调用者，然后继续执行。</p><blockquote><p>当程序发生递归调用时</p><p>​    大多数编程语言会使用，堆栈来存储调用者的状态。</p><img src="image-20211010095054799.png" alt="image-20211010095054799" style="zoom: 25%;" /></blockquote><h3 id="3-3-1-堆栈"><a href="#3-3-1-堆栈" class="headerlink" title="3.3.1 堆栈"></a>3.3.1 堆栈</h3><p>​        堆栈。它不是一种数据结构，而是两种数据结构，堆和栈</p><p>两者的区别：</p><ul><li>堆，人为申请存储空间，得到的空间较大，树状结构，存取随意</li><li>栈，系统自动分配空间，得到的空间较小，线性结构，先进先出</li></ul><blockquote><p>不详细讲数据结构，本来算法理解的就不太行，就不好高骛远了🙏</p></blockquote><h1 id="4、斐波那契数列"><a href="#4、斐波那契数列" class="headerlink" title="4、斐波那契数列"></a>4、斐波那契数列</h1><ul><li>前两个数的值分别是0、1或者1、1</li><li>从第三个数开始，每一位数都是它前两位数的和</li></ul><p>满足以上两个特征的数列就叫斐波那契数列</p><p>​        此问题可以用我们上一章学习到的递归算法得到解决</p><h2 id="4-1-解决代码"><a href="#4-1-解决代码" class="headerlink" title="4.1 解决代码"></a>4.1 解决代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    <span class="comment">// index 表示求数列中第 index 个位置上的数的值</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">fibonacci</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 设置结束递归的限制条件</span></span><br><span class="line">        <span class="keyword">if</span> (index == <span class="number">1</span> || index == <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// F(index) = F(index-1) + F(index-2)</span></span><br><span class="line">        <span class="keyword">return</span> fibonacci(index - <span class="number">1</span>) + fibonacci(index - <span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 输出前 10 个数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++) &#123;</span><br><span class="line">            System.out.print(fibonacci(i) + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-2-总结"><a href="#4-2-总结" class="headerlink" title="4.2 总结"></a>4.2 总结</h2><pre><code>     用递归实现斐波那契数列效率非常的低，当fibonacci(1000)执行时间会长到难以想象的地步，且还要避免栈溢出的情况</code></pre><h1 id="5、分治算法"><a href="#5、分治算法" class="headerlink" title="5、分治算法"></a>5、分治算法</h1><p>​        分治，分而治之。</p><p>​        当问题涉及到大量的数据时，只需要处理小部分的数据，问题就会变得简单。</p><blockquote><p>举例：</p><p>​        100个随机的自然数找最大的数。</p><p>​        如果直接从100个数里面找，会比较困难，如果把100个数分成20份，从5个数里找最大的，就会变得容易，然后比较20个数就会容易，你也可以再将它分为n份进行比较</p></blockquote><p>分治算法解决问题的步骤：</p><ul><li>分，将大问题划分为若干个小问题</li><li>治，逐个解决这些小问题</li><li>合并，再将所有小问题的解决方案合并到一块解决大问题</li></ul><h2 id="5-1-分治算法的利弊"><a href="#5-1-分治算法的利弊" class="headerlink" title="5.1 分治算法的利弊"></a>5.1 分治算法的利弊</h2><p>​        利：</p><p>​            划分为每个小问题只需要处理很少的数据</p><p>​            小问题之间是相互独立的，可以让计算机并行处理，提高效率</p><p>​        弊：</p><p>​            由于经常搭配递归算法使用，解决问题的过程会很耗费时间和内存空间</p><h2 id="5-2-应用场景"><a href="#5-2-应用场景" class="headerlink" title="5.2 应用场景"></a>5.2 应用场景</h2><ul><li>汉诺塔问题</li><li>找数列的最大值、最小值</li><li>…</li></ul><h1 id="6、找数组的最大值和最小值"><a href="#6、找数组的最大值和最小值" class="headerlink" title="6、找数组的最大值和最小值"></a>6、找数组的最大值和最小值</h1><h2 id="6-1-解题思路"><a href="#6-1-解题思路" class="headerlink" title="6.1 解题思路"></a>6.1 解题思路</h2><h3 id="正常思路"><a href="#正常思路" class="headerlink" title="正常思路"></a>正常思路</h3><p>​        按照我们正常的思维解决这个问题的，我们会用这一串数的第一个数与后面的所有数进行比较，如果有比第一个数大或小的，就用这个数继续与后面的数进行比较，直至比较到最后一位数。</p><blockquote><p>这样的算法弊端是很大的：</p><p>​    当我们要比较的数非常的多时，这样比较起来就非常的慢</p></blockquote><h3 id="分治算法"><a href="#分治算法" class="headerlink" title="分治算法"></a>分治算法</h3><p>​        我们用上一章节学到的<strong>分治算法</strong>，来尝试分析一下这个问题。</p><p><strong>实现思路：</strong></p><blockquote><p>不断地等分数组中的元素，直至各个分组中的元素个数 ≤ 2个，2个数的话这样就很容易比较出来了。</p><blockquote><p>???</p></blockquote><p>​        可能有人就要问？ 虽然分了组，但是也还是要挨个比较呀。确实，我们学到的某些算法，有时候不见得能有普通的方式效率快得多。但是！我们学的<strong>不是人</strong>用的算法，是运用在计算机上的算法，你可以将计算机理解为，一群有着超强计算能力的人在为我们工作。</p><p>​        所以分治算法运用在计算机上，就是一群人近乎同步的完成分化的小问题。当然要比一群人一块算一个大问题要快得多(<strong>普通算法</strong>)。</p></blockquote><h2 id="6-2-代码实现"><a href="#6-2-代码实现" class="headerlink" title="6.2 代码实现"></a>6.2 代码实现</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 将一个数组，和数组最左边的元素和最右边的元素的下标(也就是第一个元素和最后一个元素的)传入函数内</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">get_max</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span> </span>&#123;    </span><br><span class="line">        <span class="comment">// 若数组为空，结束该函数</span></span><br><span class="line">        <span class="keyword">if</span> (arr == <span class="keyword">null</span> || arr.length == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 若此时比较范围有2个元素时</span></span><br><span class="line">        <span class="keyword">if</span> (right-left &lt;= <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="comment">// 比较这两个元素</span></span><br><span class="line">            <span class="keyword">if</span> (arr[left] &gt; arrp[right]) &#123;</span><br><span class="line">                <span class="keyword">return</span> arr[left];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 等量划分为两个区域</span></span><br><span class="line">        <span class="comment">// 这里运用了先序遍历法，因为将大问题划分为若干小问题时，根据画图描述(上面就是)，这特别像一个树。</span></span><br><span class="line">        <span class="comment">// 先序遍历法离散数学有讲，可以翻一翻期末复习题，有一道相关的可以帮助理解</span></span><br><span class="line">        <span class="keyword">int</span> middle = (right-left)/<span class="number">2</span>+left;</span><br><span class="line">        <span class="keyword">int</span> max_left = get_max(arr,left,middle);</span><br><span class="line">        <span class="keyword">int</span> max_right = get_max(arr,middle+<span class="number">1</span>,right);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(max_left &gt;= max_right) &#123;</span><br><span class="line">            <span class="keyword">return</span> max_left;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> max_right;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[] &#123; <span class="number">3</span>,<span class="number">7</span>,<span class="number">2</span>,<span class="number">1</span> &#125;;</span><br><span class="line">        <span class="keyword">int</span> max = get_max(arr,<span class="number">0</span>,<span class="number">3</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;最大值：&quot;</span>+max);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>简单总结一下：</p><p>​        该问题在解决中还涉及到，另外一种数据结构，树状结构。如果这个展开讲，那篇幅真是又臭又长，虽然写的过程很快乐，但是如果篇幅太长了，连我自己都看不下去。如果有精力，我试着将数据结构都提取到一块来，尽量只讲数据结构。可是数据结构和算法的紧密度非常大，我只能尽力而为。</p></blockquote><h1 id="7、汉诺塔问题"><a href="#7、汉诺塔问题" class="headerlink" title="7、汉诺塔问题"></a>7、汉诺塔问题</h1><p>​        汉诺塔问题，传说是印度的神还是佛留下的一个问题，有兴趣自己去搜搜。</p><p>问题描述：</p><ul><li>有三根石柱，其中一根石柱上，从大到小依次摞着64个圆环，将这所有圆环移动到另一个柱子上面</li><li>遵守以下规则<ul><li>每次只能移动一个圆环</li><li>无论圆环处于哪个柱子上，大圆环必须在小圆环的下面</li></ul></li></ul><img src="image-20211010095149878.png" alt="image-20211010095149878" style="zoom: 33%;" /><p>​        根据给出的这个图片我们，发现借助第三个珠子，可以比较容易的达到最终目的，可随着柱子的数量越来越多，挪动的次数越来越多，思维会变得逐渐混乱。会搞不清接下来到底该挪动哪一个柱子上的圆环</p><h2 id="7-1-分治算法解决汉诺塔"><a href="#7-1-分治算法解决汉诺塔" class="headerlink" title="7.1 分治算法解决汉诺塔"></a>7.1 分治算法解决汉诺塔</h2><p>​        我们尝试用分治算法的思路去理解挪动过程。↓↓↓</p><p>​        当左柱（佐助…）只有 1 个圆环时，我们可以很轻易地将它移动到中柱上；</p><p>​        当左柱只有 2 个圆环时，先将最上面的圆环挪到右柱上，再将左柱上剩下的那一个圆环挪到中柱，最后将右柱的圆环挪到中柱</p><p>​        当左柱上有 3 个圆环时，先将左柱上的 2 个圆盘移动到右柱上，然后将左柱上剩下的圆环移动到中柱上，最后将右柱上的圆环移动到中柱上。</p><p><strong>总结规律：</strong></p><ul><li>将左柱上的 n-1 个圆环动到右柱上；</li><li>将左柱上遗留的 1 个圆环移动到中柱上；</li><li>将右柱柱上的所有圆环移动到中柱上。</li></ul><blockquote><p>已经尽可能的用最清晰的逻辑讲解这个问题了。看一遍不懂没关系（因为我也画图理了好几遍没什么丢人的），自己动手画一画四五个圆环的情况，结合着总结的规律去理解。</p><p>不着急不浮躁，没有什么是一蹴而就的。这话说给我用来警醒自己的，你们也要学会这样。</p></blockquote><h2 id="7-2-代码实现"><a href="#7-2-代码实现" class="headerlink" title="7.2 代码实现"></a>7.2 代码实现</h2><p>​        摸清了思路之后，开始尝试用代码实现。每一个题都要自己考虑，代码必须自己用心去敲，不要觉着自己看会了，就行了。你的手和脑子都没那大本事。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 统计移动次数</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">hanoi</span><span class="params">(<span class="keyword">int</span> num, <span class="keyword">char</span> sou, <span class="keyword">char</span> tar, <span class="keyword">char</span> sux)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 如果圆盘数量仅有 1 个，则直接从起始柱移动到目标柱</span></span><br><span class="line">        <span class="keyword">if</span> (num == <span class="number">1</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;第&quot;</span> + i + <span class="string">&quot;次:从&quot;</span> + sou + <span class="string">&quot;移动到&quot;</span> + tar);</span><br><span class="line">            i++;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 递归调用 hanoi() 函数，将 num-1 个圆盘从起始柱移动到辅助柱上</span></span><br><span class="line">            hanoi(num - <span class="number">1</span>, sou, sux, tar);</span><br><span class="line">            <span class="comment">// 将起始柱上剩余的最后一个大圆盘移动到目标柱上</span></span><br><span class="line">            System.out.println(<span class="string">&quot;第&quot;</span> + i + <span class="string">&quot;次:从&quot;</span> + sou + <span class="string">&quot;移动到&quot;</span> + tar);</span><br><span class="line">            i++;</span><br><span class="line">            <span class="comment">// 递归调用 hanoi() 函数，将辅助柱上的 num-1 圆盘移动到目标柱上</span></span><br><span class="line">            hanoi(num - <span class="number">1</span>, sux, tar, sou);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 以移动 3 个圆盘为例，起始柱、目标柱、辅助柱分别用 A、B、C 表示</span></span><br><span class="line">        hanoi(<span class="number">3</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="8、贪心算法"><a href="#8、贪心算法" class="headerlink" title="8、贪心算法"></a>8、贪心算法</h1><p>​        我们每个人都有追求最完美事物的心理，这可以简单的理解为贪心。</p><p>​        贪心算法，就是算法中的每一个步骤都追求最优的解决方案，且是目前的算法当中最容易实现的算法。</p><blockquote><p>举个栗子：</p><p>​        假设有1、2、5、10这四种面值的纸币，在不限制纸币数量的情况下，用尽可能最少的纸币拼凑出总面值18</p></blockquote><p>贪心算法解决方案：</p><ul><li>先选一张最大面值的10，此时还需拼凑8</li><li>再选一张当前仅能选的面值5，此时还需拼凑3</li><li>再选一张当前仅能选的面值2，此时还需拼凑1</li><li>最后选一张1，完成拼凑。</li></ul><p>由此可以看出，贪心算法每一步，都是最优的解决方案。</p><blockquote><p>再举个栗子：</p><p>​        假设有1、7、10这三种面值，在不限制纸币数量的情况下，用尽可能最少的纸币拼凑出总面值15</p></blockquote><p>再用贪心算法解决：</p><ul><li>先选一张最大面值的10，此时还需拼凑5</li><li>再选一张当前仅能选的面值1，此时还需拼凑4</li><li>再选一张当前仅能选的面值1，此时还需拼凑3</li><li>再选一张当前仅能选的面值1，此时还需拼凑2</li><li>再选一张当前仅能选的面值1，此时还需拼凑1</li><li>最后再选一张1，完成拼凑。</li></ul><p>​        到了这里，我们好像发现了一些问题，不是说贪心算法每个步骤都是追求最优的吗。明明用两张7和一张1就能解决的问题，用贪心算法怎么就变得麻烦了呢。问题这不就来了吗，再最开头我也说到过，没有绝对的好坏，只有特定条件下的好坏。</p><h2 id="8-1-贪心算法的利弊"><a href="#8-1-贪心算法的利弊" class="headerlink" title="8.1 贪心算法的利弊"></a>8.1 贪心算法的利弊</h2><p>​        利：</p><p>​            在大多数情况下易于实现且非常高效</p><p>​        弊：</p><p>​            贪心算法追求每一步的最优解，而不关心整个解决方案是否最优</p><h2 id="8-2-应用场景"><a href="#8-2-应用场景" class="headerlink" title="8.2 应用场景"></a>8.2 应用场景</h2><ul><li>解决部分背包问题</li><li>…</li><li>与克鲁斯卡尔算法、迪杰斯特拉算法混用</li></ul><h1 id="9、部分背包问题"><a href="#9、部分背包问题" class="headerlink" title="9、部分背包问题"></a>9、部分背包问题</h1><p>​        在限定条件下，如何从众多物品中选出收益最高的几件物品，这就是部分背包问题。我们貌似对这种问题很熟悉，没错，小学很多都是这种的题目。</p><h2 id="9-1-背包问题类型"><a href="#9-1-背包问题类型" class="headerlink" title="9.1 背包问题类型"></a>9.1 背包问题类型</h2><ul><li>0-1背包问题：每个物品<strong>不可再分</strong>，要么选择，要么放弃。</li><li>部分背包问题：每个物品<strong>可再分</strong>，可以选择物品的一部分。</li><li>完全背包问题：每个物品<strong>不限制数量</strong></li><li>多重背包问题：每个物品<strong>有数量限制</strong></li></ul><h2 id="9-2-贪心算法解决部分背包问题"><a href="#9-2-贪心算法解决部分背包问题" class="headerlink" title="9.2 贪心算法解决部分背包问题"></a>9.2 贪心算法解决部分背包问题</h2><p>假设商店中：有3种物品，各自重量和收益是：</p><ul><li><p>商品1：重10斤，收益60元</p></li><li><p>商品2：重20斤，收益100元</p></li><li><p>商品3：重30斤，收益120元</p><p>  每个商品可再分。一个小偷想要偷这些商品，但是他的包只有50斤重，如何才能偷取最大的收益</p></li></ul><p>贪心算法解决思路：</p><p>​        计算每个商品的收益率，优先选择收益率最大的商品，直到选择不了任何商品</p><h2 id="9-3-代码实现"><a href="#9-3-代码实现" class="headerlink" title="9.3 代码实现"></a>9.3 代码实现</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ：Myy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> ：Created in 2021/9/12 13:17</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 根据商品收益率排序，以供小偷选择</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">float</span>[] w, <span class="keyword">float</span>[] p)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> length = w.length;</span><br><span class="line">        <span class="comment">// 存储商品收益率</span></span><br><span class="line">        <span class="keyword">float</span> [] v = <span class="keyword">new</span> <span class="keyword">float</span>[length];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;length;i++) &#123;</span><br><span class="line">            v[i] = p[i]/w[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 根据收益率大小进行排序 （这里用的是冒泡排序）</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (v[i] &lt; v[j]) &#123;</span><br><span class="line">                    <span class="keyword">float</span> temp = v[i];</span><br><span class="line">                    v[i] = v[j];</span><br><span class="line">                    v[j] = temp;</span><br><span class="line"></span><br><span class="line">                    temp = w[i];</span><br><span class="line">                    w[i] = w[j];</span><br><span class="line">                    w[j] = temp;</span><br><span class="line"></span><br><span class="line">                    temp = p[i];</span><br><span class="line">                    p[i] = p[j];</span><br><span class="line">                    p[j] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 编写贪心算法</span></span><br><span class="line">    <span class="comment">// w各个商品总重量</span></span><br><span class="line">    <span class="comment">// p各个商品的总价值</span></span><br><span class="line">    <span class="comment">// result记录各个商品装入背包的比例</span></span><br><span class="line">    <span class="comment">// W背包重量</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">factional_knapsack</span><span class="params">(<span class="keyword">float</span>[] w, <span class="keyword">float</span>[] p, <span class="keyword">float</span>[] result, <span class="keyword">float</span> W)</span> </span>&#123;</span><br><span class="line">        sort(w,p);</span><br><span class="line">        <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (W &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">float</span> temp = W &gt; w[i]?w[i]:W;</span><br><span class="line">            result[i] = temp / w[i];</span><br><span class="line">            W -= temp;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//设定背包的容量</span></span><br><span class="line">        <span class="keyword">float</span> W = <span class="number">50</span>;</span><br><span class="line">        <span class="comment">//各个商品的重量</span></span><br><span class="line">        <span class="keyword">float</span> [] w = &#123; <span class="number">10</span>,<span class="number">30</span>,<span class="number">20</span> &#125;;</span><br><span class="line">        <span class="comment">//各个商品的价值</span></span><br><span class="line">        <span class="keyword">float</span> [] p = &#123; <span class="number">60</span>,<span class="number">100</span>,<span class="number">120</span> &#125;;</span><br><span class="line">        <span class="comment">//统计背包中商品的总收益</span></span><br><span class="line">        <span class="keyword">float</span> [] result = &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line">        <span class="comment">//调用解决部分背包问题的函数</span></span><br><span class="line">        factional_knapsack(w,p,result,W);</span><br><span class="line">        <span class="comment">//统计背包中商品的总收益</span></span><br><span class="line">        <span class="keyword">float</span> values = <span class="number">0</span>;</span><br><span class="line">        factional_knapsack(w, p, result, W);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;w.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(result[i] == <span class="number">1</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;总重量：&quot;</span>+w[i]+<span class="string">&quot;，总价值：&quot;</span>+p[i]+<span class="string">&quot;的商品全部装入&quot;</span>);</span><br><span class="line">                values += p[i];</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(result[i] == <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;总重量：&quot;</span>+w[i]+<span class="string">&quot;，总价值：&quot;</span>+p[i]+<span class="string">&quot;的商品不装入&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;总重量：&quot;</span>+w[i]+<span class="string">&quot;,总价值：&quot;</span>+p[i]+<span class="string">&quot;的商品装入&quot;</span>+result[i]*<span class="number">100</span>+<span class="string">&quot;%&quot;</span>);</span><br><span class="line">                values += p[i]*result[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;总收益：&quot;</span>+values);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>手把手_教你拥有自己的博客</title>
      <link href="/posts/63e8d70/"/>
      <url>/posts/63e8d70/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看起来不太对" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="5903eb9325f0e5bd7db11c4bae5ff2f7c6d00a9b4360105387a3192b004fa7ea"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好，输入正确的密码才能访问该文章！</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>致自己</title>
      <link href="/posts/89ef750f/"/>
      <url>/posts/89ef750f/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看起来不太对" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="ae875c86a8a4a88ced24a7837e75b9cffee18fbba215bf2e2f4382290faeb039">0b91594d29f0d1fc0377569283598307d0ea4035ed1f0572a59f01be27a3295a16aee7380dc2f7be5043dbb21453ef3f807a03d741da999d3d3ad2a259a53e5377dfd384d21db04bf4b93d2d98e504f61aa1d9d937cab78c2dd31c4179697a91d3f6cb9a2dbd0418e5134135d3cccc3c48e3ccbe0fcdb237aae2334e516d4e20c4c789f65590299240919560ce9cf570e5405e97fa48c1017cacd9f721fe4de03eeb083cdab767cd8ff4c7b1ecfa08bd9283e88a9d46452ba5635e2232b899f7ae11576c40835c2ea8590413a79cce8aff5cef1a40c59763aeb0ec8a93b2d93d9910f89fd02c8997508118068b689b550690ac6a3f1a3f695a3d474850d22048394f2d9fab657b4c7e6af855796074da07a68d5f89e37c87165cad8552df89931afe8cedf23b08b71c3d31afe1aaad8bf02c18603e276a4984ea1c2bc281a22c80fdd0ef5e8cf7ada927d2051507e579b360d39182969c7d1ebfbfe45e48a6e0d2c85bab27146812343241ffb2ed06f81a3359badbff11e5cf1e4376493810cdde50ebb4ff7ba350668bb029eeaa9f67acf8cacf87d501d60e8a3a12fa534f2abafbd3b4b0fd0b034be4f15fbe4f98a2b42f1a444dd8cdf611bb242be8ab66054f7b9ba93d4b2def10ef820f6bbf968dcc303b896456207421eb37cd6e5da335d6ac66a7a263644589a67b925049d315f99b40f6b80c7bf06fbecbf1835e99dadcb06b48c18e6273649d470c8e85858f1d2119aab1ed0b01ecceedb358911762ddddec9d8f9bae99306c85f50bfe47c0ce0142240f28be97ad76513c1967bcb459528a2d36a1174e288c3de34d22845b17ea5f7118fbd57321dbc47350f518ae9a83a75dfb5ddb68bac6e9ff2ea1921ab4be60a43e15876a3ae3dd8888e4af9d92094c8af0888cc0252500226a987104649d41d62aac8ad7d0a63d766c7da897</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好，输入正确的密码才能访问该文章！</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 个人总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 规划 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
